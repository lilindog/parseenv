{"version":3,"file":"parseenv.js","sources":["../src/constans.js","../src/statementTypes.js","../src/parse.js","../src/helper.js","../src/getEnv.js","../src/main.js"],"sourcesContent":["export const kConfigIsStrict = Symbol(\"k_config_is_strict\");\r\nexport const kConfigTimeout = Symbol(\"k_config_timeout\");","/**\r\n * handle value env insert\r\n *\r\n * @return {String}\r\n * @private\r\n */\r\nfunction handleValue () {\r\n    let value = this.value;\r\n    let insert_letter = \"\";\r\n    let index = 0;\r\n    const results = [];\r\n    while (index < value.length) {\r\n        const char = value[index];\r\n        if (insert_letter) {\r\n            if (char === \"}\" && value[index - 1] !== \"\\\\\") {\r\n                insert_letter += \"}\";\r\n                results.push(insert_letter);\r\n                insert_letter = \"\";\r\n            } else {\r\n                insert_letter += char;\r\n            }\r\n        } else {\r\n            if (char === \"{\" && value[index - 1] !== \"\\\\\") {\r\n                insert_letter = \"{\";\r\n            }\r\n        }\r\n        index++;\r\n    }\r\n    results.forEach(key => {\r\n        let field = key.slice(1, -1);\r\n        field = process.env?.[field] ? String(process.env?.[field]) : \"NONE\";\r\n        value = value.replace(key, field);\r\n    });\r\n    // \"123\" -> Number or \"123c\" -> String\r\n    value = isNaN(Number(value)) ? value : Number(value);\r\n    return value;\r\n}\r\n\r\n/**\r\n * rowType base class\r\n *\r\n * @private\r\n */\r\nclass RowBase {\r\n    static Fields = {\r\n        // statement 起始位置\r\n        position: -1\r\n    };\r\n\r\n    constructor (options = {}) {\r\n        const Fields = JSON.parse(JSON.stringify(\r\n            Object.assign({}, RowBase.Fields, new.target.Fields)\r\n        ));\r\n        Reflect.ownKeys(Fields).forEach(k => this[k] = options[k] !== undefined ? options[k] : Fields[k]);\r\n    }\r\n}\r\n\r\n/**\r\n * key - value\r\n *\r\n * @public\r\n */\r\nclass KVStatement extends RowBase {\r\n    static Types = {\r\n        KEY: \"KEY\",\r\n        LIST: \"LIST\",\r\n        MAP: \"MAP\",\r\n        DEFAULT: \"DEFAULT\" // 未指定\r\n    };\r\n\r\n    static Fields = {\r\n        type: KVStatement.Types.DEFAULT,\r\n        field: \"\",\r\n        property: \"\", // Type == MAP 才有\r\n        value: \"\"\r\n    };\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    getValue () {\r\n        return handleValue.call(this);\r\n    }\r\n}\r\n\r\n/**\r\n * operater\r\n *\r\n * @public\r\n */\r\nclass Operator extends RowBase {\r\n    static Types = {\r\n        EQUAL: \"EQUAL\",\r\n        NO_EQUAL: \"NO_EQUAL\",\r\n        DEFAULT: \"DEFAULT\"\r\n    };\r\n\r\n    static Fields = {\r\n        type: Operator.Types.DEFAULT\r\n    } ;\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n}\r\n\r\n/**\r\n * condition\r\n *\r\n * @public\r\n */\r\nclass Condition extends RowBase {\r\n    static Types = {\r\n        LITERAL: \"LITERAL\",\r\n        USE_VARIABLE: \"USE_VARIABLE\",\r\n        USE_ENV: \"USE_ENV\",\r\n        DEFAULT: \"DEFAULT\"\r\n    };\r\n\r\n    static Fields = {\r\n        type: Condition.Types.DEFAULT,\r\n        field: \"\",\r\n        property: \"\" // 使用变量map时才需要指定该字段\r\n    };\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n}\r\n\r\n/**\r\n * if statement\r\n *\r\n * @public\r\n */\r\nclass IfStatement extends RowBase {\r\n    static Fields = {\r\n        conditions: []\r\n    };\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    get lastCondition () {\r\n        return this.conditions[this.conditions.length - 1];\r\n    }\r\n\r\n    /**\r\n     * 将条件转换为函数\r\n     */\r\n    convert2function () {\r\n        let preConditionCode = \"\";\r\n        let code = \"\";\r\n        this.conditions.forEach((condition, index) => {\r\n            // compute operator\r\n            if (condition instanceof Operator) {\r\n                const operator =\r\n                    condition.type === Operator.Types.EQUAL ? \"===\" :\r\n                        condition.type === Operator.Types.NO_EQUAL ? \"!==\" :\r\n                            \"\";\r\n                if (index > 1) code += ` && ${preConditionCode} ${operator} `;\r\n                else code += operator;\r\n            }\r\n            // condition statement\r\n            else {\r\n                switch (condition.type) {\r\n                    case Condition.Types.LITERAL: {\r\n                        preConditionCode = isNaN(Number(condition.field)) ? ` \"${condition.field}\" ` : ` ${condition.field} `;\r\n                        code += preConditionCode;\r\n                        break;\r\n                    }\r\n                    case Condition.Types.USE_ENV: {\r\n                        preConditionCode = ` \r\n                            (\r\n                                isNaN(Number(process.env?.${condition.field})) ? \r\n                                process.env?.${condition.field} : \r\n                                Number(process.env?.${condition.field})\r\n                            ) \r\n                        `;\r\n                        code += preConditionCode;\r\n                        break;\r\n                    }\r\n                    case Condition.Types.USE_VARIABLE: {\r\n                        preConditionCode = ` this?.${condition.field}`;\r\n                        if (condition.property) preConditionCode += `?.${condition.property}`;\r\n                        code += preConditionCode;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return new Function (\"return \" + code + \";\");\r\n    }\r\n}\r\n\r\n/**\r\n * else if statement\r\n *\r\n * @public\r\n */\r\nclass ElseIfStatement extends IfStatement {\r\n    static Fields = Object.assign({}, IfStatement.Fields);\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n}\r\n\r\n/**\r\n * else\r\n *\r\n * @public\r\n */\r\nclass ElseStatement extends RowBase {\r\n    static Fields = {};\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n}\r\n\r\n/**\r\n * endif\r\n *\r\n * @public\r\n */\r\nclass EndifStatement extends RowBase {\r\n    static Fields = {};\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n}\r\n\r\n/**\r\n * include statement\r\n *\r\n * @public\r\n */\r\nclass IncludeStatement extends RowBase {\r\n    static Fields = {\r\n        value: \"\" // 可以换为编译好的函数处理环境变量插值后返回真正的值\r\n    };\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n\r\n    getValue () {\r\n        return handleValue.call(this);\r\n    }\r\n}\r\n\r\n/**\r\n * comment statement\r\n *\r\n * @public\r\n */\r\nclass CommentStatement extends RowBase {\r\n    static Fields = {\r\n        value: \"\"\r\n    };\r\n\r\n    constructor (props) {\r\n        super(props);\r\n    }\r\n}\r\n\r\n/**\r\n * export modules\r\n */\r\nexport {\r\n    KVStatement,\r\n    IfStatement,\r\n    ElseIfStatement,\r\n    ElseStatement,\r\n    EndifStatement,\r\n    Condition,\r\n    Operator,\r\n    IncludeStatement,\r\n    CommentStatement\r\n};","import {\r\n    KVStatement,\r\n    IfStatement,\r\n    ElseIfStatement,\r\n    ElseStatement,\r\n    EndifStatement,\r\n    Condition,\r\n    Operator,\r\n    IncludeStatement,\r\n    CommentStatement\r\n} from \"./statementTypes.js\";\r\n\r\nlet INDEX = 0;\r\nlet result = [];\r\nlet statement = null;\r\nlet input = \"\";\r\nlet ERR_MSG = \"\";\r\n\r\n/**\r\n * parse env string content to statement\r\n *\r\n * @param input {String}\r\n * @returns {RowBase[]}\r\n * @public\r\n */\r\nfunction parse (content = \"\") {\r\n    input = content;\r\n\r\n    let STATE = \"START\"; // START\\KEY\\VALUE\\CONDITION\\EQUA\\COMMENT\\END\\DONE\\CALC\r\n    let IN_LIST = false;\r\n    let IN_MAP = false;\r\n    let IN_USE_VARIABLE = false;\r\n    let IN_ENV_INSERT = false;\r\n    let IN_USE_VARIABLE_MAP = false;\r\n    let IN_VALUE_ENV_INSERT = false;\r\n    let pre_condition_statement = null;\r\n\r\n    while (STATE !== \"DONE\") {\r\n        let char = input[INDEX];\r\n        switch (STATE) {\r\n\r\n            case \"START\": {\r\n                skipSpaceAndCRLF();\r\n                char = input[INDEX];\r\n                if (char === \"#\") {\r\n                    STATE = \"COMMENT\";\r\n                    statement = new CommentStatement({ position: INDEX });\r\n                    break;\r\n                }\r\n\r\n                const howIf = readCharByCount(3).toLowerCase();\r\n                const howElse = readCharByCount(4).toLowerCase();\r\n                const howElseIf = readCharByCount(7).toLowerCase();\r\n                const howEndIf = readCharByCount(5).toLowerCase();\r\n                const howInclude = readCharByCount(8).toLowerCase();\r\n                let skipLen = 0;\r\n                if (howIf === \"if \") {\r\n                    INDEX += 3;\r\n                    skipLen = skipSpace();\r\n                    char = input[INDEX];\r\n                    if (char === \"=\") {\r\n                        STATE = \"KEY\";\r\n                    } else {\r\n                        STATE = \"IF\";\r\n                    }\r\n                    INDEX -= (skipLen + 3);\r\n                } else if (howElseIf === \"else if\") {\r\n                    STATE = \"ELSEIF\";\r\n                } else if (howElse === \"else\") {\r\n                    INDEX += 4;\r\n                    skipLen = skipSpace();\r\n                    char = input[INDEX];\r\n                    INDEX -= (skipLen + 4);\r\n                    if (char === \"=\") {\r\n                        STATE = \"KEY\";\r\n                    } else {\r\n                        STATE = \"ELSE\";\r\n                    }\r\n                } else if (howEndIf === \"endif\") {\r\n                    INDEX += 5;\r\n                    skipLen = skipSpace();\r\n                    char = input[INDEX];\r\n                    INDEX -= (skipLen + 5);\r\n                    if (char === \"=\") {\r\n                        STATE = \"KEY\";\r\n                    } else {\r\n                        STATE = \"ENDIF\";\r\n                    }\r\n                } else if (howInclude === \"include \") {\r\n                    INDEX += 8;\r\n                    skipLen = skipSpace();\r\n                    char = input[INDEX];\r\n                    if (char === \"=\") {\r\n                        INDEX -= (skipLen + 8);\r\n                        STATE = \"KEY\";\r\n                    } else {\r\n                        STATE = \"VALUE\";\r\n                        statement = new IncludeStatement({ position: INDEX - (skipLen + 8) });\r\n                    }\r\n                } else if (char === undefined) {\r\n                    STATE = \"END\";\r\n                } else {\r\n                    STATE = \"KEY\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"IF\": {\r\n                if (\r\n                    pre_condition_statement &&\r\n                    !(pre_condition_statement instanceof EndifStatement)\r\n                ) {\r\n                    ERR_MSG = \"if 语句不应该出现在此处\";\r\n                    STATE = \"\";\r\n                    break;\r\n                }\r\n                pre_condition_statement = statement = new IfStatement({ position: INDEX });\r\n                const s = readIdentifier();\r\n                if (s !== \"if\") {\r\n                    STATE = \"\";\r\n                    break;\r\n                }\r\n                STATE = \"CONDITION\";\r\n                break;\r\n            }\r\n\r\n            case \"ELSEIF\": {\r\n                if (\r\n                    readIdentifier().toLowerCase() !== \"else\" ||\r\n                    skipSpace() === 0 ||\r\n                    readIdentifier().toLowerCase() !== \"if\" ||\r\n                    skipSpace() === 0\r\n                ) {\r\n                    STATE = \"\";\r\n                    break;\r\n                }\r\n                if (\r\n                    !pre_condition_statement ||\r\n                    (\r\n                        !(pre_condition_statement instanceof ElseIfStatement) &&\r\n                        !(pre_condition_statement instanceof IfStatement)\r\n                    )\r\n                ) {\r\n                    ERR_MSG = \"else if 语句不应该出现在此处\";\r\n                    STATE = \"\";\r\n                    break;\r\n                }\r\n                pre_condition_statement = statement = new ElseIfStatement({ position: INDEX });\r\n                STATE = \"CONDITION\";\r\n                break;\r\n            }\r\n\r\n            case \"ELSE\": {\r\n                if (\r\n                    !pre_condition_statement ||\r\n                    (\r\n                        !(pre_condition_statement instanceof IfStatement) &&\r\n                        !(pre_condition_statement instanceof ElseIfStatement)\r\n                    )\r\n                ) {\r\n                    ERR_MSG = \"else 语句不应该出现在此处\";\r\n                    STATE = \"\";\r\n                    break;\r\n                }\r\n                pre_condition_statement = statement = new ElseStatement({ position: INDEX });\r\n                if (readIdentifier().toLowerCase() === \"else\") {\r\n                    STATE = \"END\";\r\n                } else {\r\n                    STATE = \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"ENDIF\": {\r\n                if (\r\n                    !pre_condition_statement ||\r\n                    (\r\n                        !(pre_condition_statement instanceof IfStatement) &&\r\n                        !(pre_condition_statement instanceof ElseIfStatement) &&\r\n                        !(pre_condition_statement instanceof ElseStatement)\r\n                    )\r\n                ) {\r\n                    ERR_MSG = \"endif 语句不应该出现在此处\";\r\n                    STATE = \"\";\r\n                    break;\r\n                }\r\n                pre_condition_statement = statement = new EndifStatement({ position: INDEX });\r\n                if (readIdentifier().toLowerCase() === \"endif\") {\r\n                    STATE = \"END\";\r\n                } else {\r\n                    STATE = \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"END\": {\r\n                skipSpace();\r\n                char = input[INDEX];\r\n                if (isCRLF(char)) {\r\n                    skipSpaceAndCRLF();\r\n                    STATE = \"START\";\r\n                    append();\r\n                } else if (char === undefined) {\r\n                    // check condition statements\r\n                    if (\r\n                        pre_condition_statement &&\r\n                        !(pre_condition_statement instanceof EndifStatement)\r\n                    ) {\r\n                        ERR_MSG = \"缺少endif\";\r\n                        STATE = \"\";\r\n                        INDEX = pre_condition_statement.position; // 指定报错位置\r\n                        break;\r\n                    }\r\n                    // done exit while loop\r\n                    STATE = \"DONE\";\r\n                    append();\r\n                } else {\r\n                    STATE = \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"COMMENT\": {\r\n                let s = \"\";\r\n                while (INDEX < input.length) {\r\n                    char = input[INDEX];\r\n                    if (isCRLF(char)) {\r\n                        break;\r\n                    } else {\r\n                        s += char;\r\n                        INDEX++;\r\n                    }\r\n                }\r\n                statement.value = s;\r\n                STATE = \"END\";\r\n                break;\r\n            }\r\n\r\n            case \"KEY\": {\r\n                if (IN_LIST) {\r\n                    if (char === \"]\") {\r\n                        INDEX++;\r\n                        IN_LIST = false;\r\n                        STATE = \"EQUA\";\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                } else if (IN_MAP) {\r\n                    if (!isLetter(char)) {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    const s = readIdentifier();\r\n                    statement.property = s;\r\n                    char = input[INDEX];\r\n                    if (char === \"}\") {\r\n                        STATE = \"EQUA\";\r\n                        IN_MAP = false;\r\n                        INDEX++;\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                } else {\r\n                    statement = new KVStatement({ position: INDEX });\r\n                    if (!isLetter(char)) {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    const s = readIdentifier();\r\n                    statement.field = s;\r\n                    char = input[INDEX];\r\n                    if (char === \"{\") {\r\n                        INDEX++;\r\n                        IN_MAP = true;\r\n                        statement.type = KVStatement.Types.MAP;\r\n                    } else if (char === \"[\") {\r\n                        INDEX++;\r\n                        IN_LIST = true;\r\n                        statement.type = KVStatement.Types.LIST;\r\n                    } else if (isSpace(char) || char === \"=\") {\r\n                        statement.type = KVStatement.Types.KEY;\r\n                        STATE = \"EQUA\";\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n\r\n            case \"EQUA\": {\r\n                skipSpace();\r\n                char = input[INDEX];\r\n                if (char === \"=\") {\r\n                    INDEX++;\r\n                    STATE = \"VALUE\";\r\n                } else {\r\n                    STATE = \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            // path or value\r\n            case \"VALUE\": {\r\n                /**\r\n                 * 暂时对value里的env insert 只做语法检测\r\n                 * 不做解析处理，在statement类型里边做解析处理\r\n                 */\r\n                if (IN_VALUE_ENV_INSERT) {\r\n                    if (!isLetter(char)) {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    const s = readIdentifier();\r\n                    statement.value += s;\r\n                    char = input[INDEX];\r\n                    if (char !== \"}\") {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    statement.value += \"}\";\r\n                    IN_VALUE_ENV_INSERT = false;\r\n                    INDEX++;\r\n                    char = input[INDEX];\r\n                    if (isSpace(char) || isCRLF(char)) {\r\n                        STATE = \"END\";\r\n                    }\r\n                } else {\r\n                    skipSpace();\r\n                    let s = \"\";\r\n                    while (INDEX < input.length) {\r\n                        char = input[INDEX];\r\n                        if (\r\n                            isSpace(char) || isCRLF(char) ||\r\n                            (char === \"{\" && input[INDEX - 1] !== \"\\\\\") ||\r\n                            // 不需要处理“}”, 仅当检测到未转义符的“}”时让出，好让后续逻辑抛错！\r\n                            (char === \"}\" && input[INDEX - 1] !== \"\\\\\")\r\n                        ) {\r\n                            break;\r\n                        } else {\r\n                            s += char;\r\n                            INDEX++;\r\n                        }\r\n                    }\r\n                    char = input[INDEX];\r\n                    if (char === \"{\") {\r\n                        statement.value += s + \"{\";\r\n                        INDEX++;\r\n                        IN_VALUE_ENV_INSERT = true;\r\n                    } else if (s || statement.value) { // 本意本来不让statement参与判断，这里我不愿定义其它flag变量，暂时先这样了！\r\n                        statement.value += s || \"\";\r\n                        STATE = \"END\";\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n\r\n            /**\r\n             * 条件语句中的条件处理（不包含运算符=、！=）\r\n             * !!! 逻辑出口部分记得处理end状态（有可能没有下次循环，需要在本次循环内处理end逻辑）\r\n             */\r\n            case \"CONDITION\": {\r\n                skipSpace();\r\n                char = input[INDEX];\r\n                // 使用声明变量中的map字段\r\n                if (IN_USE_VARIABLE_MAP) {\r\n                    if (!isLetter(char)) {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    const s = readIdentifier();\r\n                    statement.lastCondition.property = s;\r\n                    char = input[INDEX];\r\n                    // use variable map end\r\n                    if (char !== \"}\") {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    INDEX++;\r\n                    char = input[INDEX];\r\n                    if (char === \"]\") {\r\n                        INDEX++;\r\n                        IN_USE_VARIABLE_MAP = false;\r\n                        IN_USE_VARIABLE = false;\r\n                        STATE = \"CALC\";\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                }\r\n                // 使用声明变量\r\n                else if (IN_USE_VARIABLE) {\r\n                    if (!isLetter(char)) {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    const s = readIdentifier();\r\n                    statement.lastCondition.field = s;\r\n                    char = input[INDEX];\r\n                    // use variable结束\r\n                    if (char === \"]\") {\r\n                        IN_USE_VARIABLE = false;\r\n                        INDEX++;\r\n                        STATE = \"CALC\";\r\n                    }\r\n                    // use variable map 开始\r\n                    else if (char === \"{\") {\r\n                        IN_USE_VARIABLE_MAP = true;\r\n                        INDEX++;\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                }\r\n                // 使用环境变量插值\r\n                else if (IN_ENV_INSERT) {\r\n                    if (!isLetter(char)) {\r\n                        STATE = \"\";\r\n                        break;\r\n                    }\r\n                    const s = readIdentifier();\r\n                    statement.lastCondition.field = s;\r\n                    char = input[INDEX];\r\n                    if (char === \"}\") {\r\n                        INDEX++;\r\n                        IN_ENV_INSERT = false;\r\n                        STATE = \"CALC\";\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                }\r\n                // 字面量\r\n                else {\r\n                    // 字面量, 允许数字开头\r\n                    if (isLetter(char) || isNumber(char)) {\r\n                        const s = readIdentifier();\r\n                        const condition = new Condition({\r\n                            type: Condition.Types.LITERAL,\r\n                            field: s\r\n                        });\r\n                        statement.conditions.push(condition);\r\n                        STATE = \"CALC\";\r\n                    }\r\n                    // use variable start\r\n                    else if (char === \"[\") {\r\n                        INDEX++;\r\n                        IN_USE_VARIABLE = true;\r\n                        const condition = new Condition({\r\n                            type: Condition.Types.USE_VARIABLE\r\n                        });\r\n                        statement.conditions.push(condition);\r\n                    }\r\n                    // use envvariable start\r\n                    else if (char === \"{\") {\r\n                        INDEX++;\r\n                        IN_ENV_INSERT = true;\r\n                        const condition = new Condition({\r\n                            type: Condition.Types.USE_ENV\r\n                        });\r\n                        statement.conditions.push(condition);\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n\r\n            /**\r\n             * =、!= 处理\r\n             */\r\n            case \"CALC\": {\r\n                skipSpace();\r\n                char = input[INDEX];\r\n                if (char === \"=\") {\r\n                    INDEX++;\r\n                    STATE = \"CONDITION\";\r\n                    statement.conditions.push(\r\n                        new Operator({type: Operator.Types.EQUAL})\r\n                    );\r\n                } else if (char === \"!\") {\r\n                    const next = readCharByCount(2);\r\n                    if (next === \"!=\") {\r\n                        INDEX += 2;\r\n                        STATE = \"CONDITION\";\r\n                        statement.conditions.push(\r\n                            new Operator({type: Operator.Types.NO_EQUAL})\r\n                        );\r\n                    } else {\r\n                        STATE = \"\";\r\n                    }\r\n                } else if (char === undefined || isCRLF(char) || isSpace(char)) {\r\n                    STATE = \"END\";\r\n                } else {\r\n                    STATE = \"\";\r\n                }\r\n                break;\r\n            }\r\n\r\n            default: {\r\n                throw ERR_MSG + getErrorText(input, INDEX);\r\n            }\r\n        }\r\n        // switch end\r\n    }\r\n    // while end\r\n\r\n    const return_result = result;\r\n    result = [];\r\n    INDEX = 0;\r\n    statement = undefined;\r\n    input = \"\";\r\n    ERR_MSG = \"\";\r\n\r\n    return return_result;\r\n}\r\n\r\n// debug begin =============\r\n// const st = parse(content);\r\n// const cds = st.filter(i => i instanceof IfStatement || i instanceof ElseIfStatement);\r\n// cds.forEach(i => console.log(i.convert2function().toString()));\r\n// debug end ===============\r\n\r\nfunction readCharByCount (count) {\r\n    return input.slice(INDEX, INDEX + count);\r\n}\r\n\r\nfunction readIdentifier () {\r\n    let s = \"\";\r\n    while (INDEX < input.length) {\r\n        const char = input[INDEX];\r\n        if (isLetter(char) || isNumber(char) || char === \"_\") {\r\n            s += char;\r\n            INDEX++;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction append () {\r\n    if (!statement) return;\r\n    result.push(statement);\r\n    statement = undefined;\r\n}\r\n\r\nfunction isSpace (char) {\r\n    return char === undefined ? false : char.codePointAt(0) === 32;\r\n}\r\n\r\nfunction isCRLF (char) {\r\n    return [\"\\r\", \"\\n\"].includes(char);\r\n}\r\n\r\nfunction isLetter (char = \"\") {\r\n    const point = char.toLowerCase().codePointAt(0);\r\n    return (point < 123 && point > 96) || [\"_\"].includes(char);\r\n}\r\n\r\nfunction isNumber (char = \"\") {\r\n    if (char === undefined) return false;\r\n    const point = char.codePointAt(0);\r\n    return point > 47 && point < 58;\r\n}\r\n\r\nfunction skipSpace () {\r\n    let count = 0;\r\n    while (INDEX < input.length) {\r\n        if (isSpace(input[INDEX])) {\r\n            INDEX++;\r\n            count++;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nfunction skipSpaceAndCRLF () {\r\n    let count = 0;\r\n    while (INDEX < input.length) {\r\n        const char = input[INDEX];\r\n        if (isSpace(char) || isCRLF(char)) {\r\n            INDEX++;\r\n            count++;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\nfunction getErrorText (text = \"\", position = -1) {\r\n    text = text || input;\r\n    const lines = [/* \"xxxx\\n\", \"xxxx\\n\", ... */];\r\n    const positions = [/* [1,2,3,4], ... */];\r\n    let index = 0;\r\n    let line = \"\";\r\n    let spots = [];\r\n    while (index < text.length + 1) {\r\n        const char = text[index];\r\n        if (char === \"\\n\" || char === \"\\r\") {\r\n            if (char === \"\\r\") {\r\n                if (text[index + 1] !== \"\\n\") throw new Error(\"此处应为'\\n'!\");\r\n                spots.push(index, index + 1);\r\n                index += 2;\r\n            } else {\r\n                spots.push(index);\r\n                index += 1;\r\n            }\r\n            lines.push(line);\r\n            line = \"\";\r\n            positions.push(spots);\r\n            spots = [];\r\n        } else if (char === undefined) {\r\n            lines.push(line);\r\n            line = \"\";\r\n            positions.push(spots);\r\n            spots = [];\r\n            break;\r\n        } else {\r\n            spots.push(index);\r\n            line += char;\r\n            index++;\r\n        }\r\n    }\r\n    const PRE_LINE_COUNT = 2; // 带上前面多少行\r\n    line = -1;\r\n    index = 0;\r\n    let preSpaceLen = 0;\r\n    while (index < positions.length) {\r\n        spots = positions[index];\r\n        if (spots.includes(position)) {\r\n            preSpaceLen = position - spots[0];\r\n            line = index;\r\n            break;\r\n        }\r\n        index++;\r\n    }\r\n    if (line === -1) {\r\n        line = positions.length - 1;\r\n        preSpaceLen = positions[positions.length - 1].length;\r\n    }\r\n    index = PRE_LINE_COUNT > line ? 0 : line - PRE_LINE_COUNT;\r\n    let tips = \"\\r\\n\";\r\n    let lastLinePreLen = 0;\r\n    for (; index <= line; index++) {\r\n        const pre = \"line\" + (index + 1) + \" >  \";\r\n        lastLinePreLen = pre.length;\r\n        tips += pre + lines[index] + \"\\r\\n\";\r\n    }\r\n    lastLinePreLen += preSpaceLen;\r\n    tips += \" \".repeat(lastLinePreLen) + \"^\\r\\n\";\r\n    tips += \" \".repeat(lastLinePreLen) + \"语法错误\\r\\n\";\r\n    tips += \" \".repeat(lastLinePreLen) + \"语法规则参考：https://github.com/lilindog/parseenv/blob/master/doc/grammar.md\\r\\n\";\r\n    return tips;\r\n}\r\n\r\n/**\r\n * export modules\r\n */\r\nexport {\r\n    parse\r\n};","import { kConfigIsStrict } from \"./constans.js\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport { parse } from \"./parse.js\";\r\nimport { IncludeStatement } from \"./statementTypes.js\";\r\n\r\nexport const log = (msg, isErr) => {\r\n    const prefix = \"[Parseenv]\";\r\n    /* eslint-disable no-console */\r\n    if (global[kConfigIsStrict] || isErr) {\r\n        console.log(\"\\x1b[41m\", \"\\x1b[37m\", prefix, \"\\x1b[40m\", \"\\x1b[31m\", msg, \"\\x1b[0m\");\r\n        process.exit(1);\r\n    } else {\r\n        console.log(\"\\x1b[45m\", \"\\x1b[37m\", prefix, \"\\x1b[40m\", \"\\x1b[33m\", msg, \"\\x1b[0m\");\r\n    }\r\n    /* eslint-disable no-console */\r\n};\r\n\r\nexport const isRemotePath = path => path.startsWith(\"http\");\r\n\r\n/**\r\n * 检测本地env文件中是否包含远程include路径（包含嵌套env中的include）\r\n *\r\n * @param {String} envPath 主env文件路径\r\n * @return {Boolean}\r\n * @public\r\n */\r\nexport const hasRemotePath = envPath => {\r\n    if (!path.isAbsolute(envPath)) {\r\n        envPath = path.resolve(envPath);\r\n    }\r\n    if (!fs.existsSync(envPath)) {\r\n        return false;\r\n    }\r\n    let statements = [];\r\n    try {\r\n        statements = parse(fs.readFileSync(envPath).toString(\"utf8\")).filter(i => i instanceof IncludeStatement);\r\n    } catch (err) {\r\n        log(envPath + \"\\r\\n\" + err, true);\r\n    }\r\n    for (let include of statements) {\r\n        if (isRemotePath(include.value)) return true;\r\n        const envPathDir = path.dirname(envPath);\r\n        if (hasRemotePath(path.resolve(envPathDir, include.getValue()))) return true;\r\n    }\r\n    return false;\r\n};","/**\r\n * 该模块主要处理env（包括嵌套的）文件为字符串数组\r\n * 嵌套的按照嵌套的优先级处理\r\n */\r\n\r\nimport http from \"http\";\r\nimport https from \"https\";\r\nimport url from \"url\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport {\r\n    isRemotePath,\r\n    log\r\n} from \"./helper.js\";\r\nimport {\r\n    KVStatement,\r\n    IfStatement,\r\n    ElseIfStatement,\r\n    ElseStatement,\r\n    EndifStatement,\r\n    IncludeStatement\r\n} from \"./statementTypes.js\";\r\nimport { parse } from \"./parse.js\";\r\nimport { kConfigTimeout } from \"./constans.js\";\r\n\r\nfunction mergePath (left, right) {\r\n    if (isRemotePath(right)) {\r\n        return right;\r\n    }\r\n    if (isRemotePath(left)) {\r\n        return new url.URL(right, left).toString();\r\n    } else {\r\n        return path.resolve(path.dirname(left), right);\r\n    }\r\n}\r\n\r\nfunction handleKVStatement2Context (statement = {}) {\r\n    ({\r\n        [KVStatement.Types.KEY] () {\r\n            this[statement.field] = statement.getValue();\r\n        },\r\n        [KVStatement.Types.MAP] () {\r\n            if (!this[statement.field]) this[statement.field] = {};\r\n            this[statement.field][statement.property] = statement.getValue();\r\n        },\r\n        [KVStatement.Types.LIST] () {\r\n            if (!this[statement.field]) this[statement.field] = [];\r\n            this[statement.field].push(statement.getValue());\r\n        }\r\n    })[statement.type].call(this);\r\n}\r\n\r\n/**\r\n * 请求远程url的env文件\r\n *\r\n * @param {String} remoteUrl http或者https链接\r\n * @param {Function} resolveCb 递归回调，重定向时内部使用，外部不要传递\r\n * @param {Number} timeout 超时\r\n * @param {Number} redirects 重定向次数限制\r\n * @return {Promise<string>}\r\n * @private\r\n */\r\nconst requestRemoteEnv = (\r\n    remoteUrl,\r\n    resolveCb,\r\n    timeout = global[kConfigTimeout] || 1000,\r\n    redirects = 1\r\n) => {\r\n    let get;\r\n    if (remoteUrl.startsWith(\"https:\")) {\r\n        ({ get } = https);\r\n    } else if (remoteUrl.startsWith(\"http:\")) {\r\n        ({ get } = http);\r\n    }\r\n    let isResolveCb = resolveCb && typeof resolveCb === \"function\";\r\n    let done;\r\n    let p;\r\n    if (!isResolveCb) {\r\n        p = new Promise(r => done = r);\r\n    } else {\r\n        done = resolveCb;\r\n    }\r\n    let timeoutId = setTimeout(() => {\r\n        log(`\"${remoteUrl}\" 文件加载超时！`);\r\n        r.destroy();\r\n        done(\"\");\r\n        clearTimeout(timeoutId);\r\n    }, timeout);\r\n    const r = get(remoteUrl, res => {\r\n        if (res.statusCode < 400 && res.statusCode > 300) {\r\n            clearTimeout(timeoutId);\r\n            if (redirects === 0) {\r\n                log(`\"${remoteUrl}\" 文件重回定向次数溢出！`);\r\n                done(\"\");\r\n                return;\r\n            }\r\n            const u = new url.URL(remoteUrl);\r\n            u.hostname = u.hash = u.search = \"\";\r\n            const redirectUrl = new url.URL(res.headers.location, u.href).href;\r\n            requestRemoteEnv(redirectUrl, done, timeout, --redirects);\r\n            return;\r\n        }\r\n        if (res.statusCode >= 400) {\r\n            clearTimeout(timeoutId);\r\n            log(`\"${remoteUrl}\" env文件加载失败！code ${res.statusCode}`);\r\n            done(\"\");\r\n            return;\r\n        }\r\n        if (!res.headers[\"content-type\"].startsWith(\"text/\")) {\r\n            log(`\"${remoteUrl}\" 文件content-type错误，应为text/xxx!`);\r\n            clearTimeout(timeoutId);\r\n            done(\"\");\r\n            return;\r\n        }\r\n        let buf = [];\r\n        res.on(\"data\", chunk => buf.push(...chunk));\r\n        res.on(\"end\", () => {\r\n            clearTimeout(timeoutId);\r\n            done(Buffer.from(buf).toString(\"utf8\"));\r\n        });\r\n    });\r\n    r.on(\"error\", done.bind(null, \"\"));\r\n    if (!isResolveCb) {\r\n        return p;\r\n    }\r\n};\r\n\r\n/**\r\n * 解析本地env\r\n *\r\n * @context {result}\r\n * @param {String} envPath env入口文件路径，可以是相对也可以是绝对\r\n * @return {void}\r\n * @public\r\n */\r\nfunction getEnv (envPath) {\r\n    if (!path.isAbsolute(envPath)) {\r\n        envPath = path.resolve(envPath);\r\n    }\r\n    if (!fs.existsSync(envPath)) {\r\n        log(`\"${envPath}\" env文件不存在！`);\r\n        return;\r\n    }\r\n    const content = fs.readFileSync(envPath).toString(\"utf8\");\r\n    let statements = [];\r\n    try {\r\n        statements = parse(content);\r\n    } catch (err) {\r\n        log(`${envPath}\\r\\n${err}`, true);\r\n    }\r\n\r\n    // handle statement\r\n    let pre_condition = false;\r\n    let skip_block = false;\r\n    for (let index = 0; index < statements.length; index++) {\r\n        const statement = statements[index];\r\n        if (skip_block) {\r\n            if (\r\n                [\r\n                    IfStatement,\r\n                    ElseIfStatement,\r\n                    ElseStatement,\r\n                    EndifStatement\r\n                ].some(i => statement instanceof i)\r\n            ) {\r\n                skip_block = false;\r\n            } else {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (statement instanceof KVStatement) {\r\n            handleKVStatement2Context.call(this, statement);\r\n        }\r\n        else if (statement instanceof IncludeStatement) {\r\n            getEnv.call(\r\n                this,\r\n                mergePath(envPath, statement.getValue())\r\n            );\r\n        }\r\n        else if (statement instanceof ElseIfStatement) {\r\n            if (pre_condition) {\r\n                skip_block = true;\r\n                continue;\r\n            }\r\n            pre_condition = statement.convert2function().call(this);\r\n            if (!pre_condition) {\r\n                skip_block = true;\r\n            }\r\n        }\r\n        else if (statement instanceof IfStatement) {\r\n            pre_condition = statement.convert2function().call(this);\r\n            if (!pre_condition) {\r\n                skip_block = true;\r\n            }\r\n        }\r\n        else if (statement instanceof ElseStatement) {\r\n            if (pre_condition) {\r\n                skip_block = true;\r\n                continue;\r\n            }\r\n        }\r\n        else if (statement instanceof EndifStatement) {\r\n            pre_condition = false;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 解析含有远程url include的env文件\r\n *\r\n * @param {String} envPath 可以是远程url，也可以是本地文件路径path，远程路径必须为http/s， 本地则可以是相对或绝对\r\n * @return {void}\r\n * @public\r\n */\r\nasync function getEnvAsync (envPath) {\r\n    let content = \"\";\r\n    if (isRemotePath(envPath)) {\r\n        content = await requestRemoteEnv(envPath);\r\n    } else {\r\n        if (!path.isAbsolute(envPath)) envPath = path.resolve(envPath);\r\n        if (!fs.existsSync(envPath)) {\r\n            log(`\"${envPath}\" env文件不存在！`);\r\n            return;\r\n        }\r\n        content = fs.readFileSync(envPath).toString(\"utf8\");\r\n    }\r\n\r\n    let statements = [];\r\n    try {\r\n        statements = parse(content);\r\n    } catch (err) {\r\n        log(envPath + \"\\r\\n\" + err, true);\r\n    }\r\n\r\n    // handle statement\r\n    let pre_condition = false;\r\n    let skip_block = false;\r\n    for (let index = 0; index < statements.length; index++) {\r\n        const statement = statements[index];\r\n        if (skip_block) {\r\n            if (\r\n                [\r\n                    IfStatement,\r\n                    ElseIfStatement,\r\n                    ElseStatement,\r\n                    EndifStatement\r\n                ].some(i => statement instanceof i)\r\n            ) {\r\n                skip_block = false;\r\n            } else {\r\n                continue;\r\n            }\r\n        }\r\n\r\n        if (statement instanceof KVStatement) {\r\n            handleKVStatement2Context.call(this, statement);\r\n        }\r\n        else if (statement instanceof IncludeStatement) {\r\n            await getEnvAsync.call(\r\n                this,\r\n                mergePath(envPath, statement.getValue())\r\n            );\r\n        }\r\n        else if (statement instanceof ElseIfStatement) {\r\n            if (pre_condition) {\r\n                skip_block = true;\r\n                continue;\r\n            }\r\n            pre_condition = statement.convert2function().call(this);\r\n            if (!pre_condition) {\r\n                skip_block = true;\r\n            }\r\n        }\r\n        else if (statement instanceof IfStatement) {\r\n            pre_condition = statement.convert2function().call(this);\r\n            if (!pre_condition) {\r\n                skip_block = true;\r\n            }\r\n        }\r\n        else if (statement instanceof ElseStatement) {\r\n            if (pre_condition) {\r\n                skip_block = true;\r\n                continue;\r\n            }\r\n        }\r\n        else if (statement instanceof EndifStatement) {\r\n            pre_condition = false;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * export modules\r\n */\r\nexport { getEnv, getEnvAsync };","import { getEnv, getEnvAsync } from \"./getEnv.js\";\r\nimport {hasRemotePath, isRemotePath} from \"./helper.js\";\r\nimport { kConfigIsStrict, kConfigTimeout } from \"./constans.js\";\r\n\r\n/**\r\n * 入口\r\n *\r\n * @param {String} envPath 本地env文件路径或者远程env文件链接\r\n * @param {Object} [options] 配置对象，可选\r\n * @param {Boolean} [options.isStrict] 是否是严格模式，严格模式下env文件找不到会抛错\r\n * @param {Number} [options.timeout] 加载远程env文件的超时时间，单位为ms， 缺省为1秒\r\n * @return {(Object|Promise<Object>)}\r\n */\r\nexport default (envPath, options) => {\r\n    if (options && {}.toString.call(options) === \"[object Object]\") {\r\n        const { isStrict, timeout } = options;\r\n        if (isStrict !== undefined && typeof isStrict === \"boolean\") {\r\n            global[kConfigIsStrict] = isStrict;\r\n        }\r\n        if (timeout && (typeof timeout === \"number\") && timeout > 0) {\r\n            global[kConfigTimeout] = timeout;\r\n        }\r\n    }\r\n    const context = {};\r\n    if (isRemotePath(envPath) || hasRemotePath(envPath)) {\r\n        return getEnvAsync.call(context, envPath).then(() => context);\r\n    } else {\r\n        getEnv.call(context, envPath);\r\n        return context;\r\n    }\r\n};"],"names":["path","fs","url","https","http"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,eAAe,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AACrD,MAAM,cAAc,GAAG,MAAM,CAAC,kBAAkB,CAAC;;ACDxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,IAAI;AACxB,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3B,IAAI,IAAI,aAAa,GAAG,EAAE,CAAC;AAC3B,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;AACvB,IAAI,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACjC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAClC,QAAQ,IAAI,aAAa,EAAE;AAC3B,YAAY,IAAI,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;AAC3D,gBAAgB,aAAa,IAAI,GAAG,CAAC;AACrC,gBAAgB,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAC5C,gBAAgB,aAAa,GAAG,EAAE,CAAC;AACnC,aAAa,MAAM;AACnB,gBAAgB,aAAa,IAAI,IAAI,CAAC;AACtC,aAAa;AACb,SAAS,MAAM;AACf,YAAY,IAAI,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;AAC3D,gBAAgB,aAAa,GAAG,GAAG,CAAC;AACpC,aAAa;AACb,SAAS;AACT,QAAQ,KAAK,EAAE,CAAC;AAChB,KAAK;AACL,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI;AAC3B,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrC,QAAQ,KAAK,GAAG,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;AAC7E,QAAQ,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC1C,KAAK,CAAC,CAAC;AACP;AACA,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACzD,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO,CAAC;AACd,IAAI,OAAO,MAAM,GAAG;AACpB;AACA,QAAQ,QAAQ,EAAE,CAAC,CAAC;AACpB,KAAK,CAAC;AACN;AACA,IAAI,WAAW,CAAC,CAAC,OAAO,GAAG,EAAE,EAAE;AAC/B,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS;AAChD,YAAY,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;AAChE,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1G,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,OAAO,CAAC;AAClC,IAAI,OAAO,KAAK,GAAG;AACnB,QAAQ,GAAG,EAAE,KAAK;AAClB,QAAQ,IAAI,EAAE,MAAM;AACpB,QAAQ,GAAG,EAAE,KAAK;AAClB,QAAQ,OAAO,EAAE,SAAS;AAC1B,KAAK,CAAC;AACN;AACA,IAAI,OAAO,MAAM,GAAG;AACpB,QAAQ,IAAI,EAAE,WAAW,CAAC,KAAK,CAAC,OAAO;AACvC,QAAQ,KAAK,EAAE,EAAE;AACjB,QAAQ,QAAQ,EAAE,EAAE;AACpB,QAAQ,KAAK,EAAE,EAAE;AACjB,KAAK,CAAC;AACN;AACA,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,GAAG;AAChB,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,SAAS,OAAO,CAAC;AAC/B,IAAI,OAAO,KAAK,GAAG;AACnB,QAAQ,KAAK,EAAE,OAAO;AACtB,QAAQ,QAAQ,EAAE,UAAU;AAC5B,QAAQ,OAAO,EAAE,SAAS;AAC1B,KAAK,CAAC;AACN;AACA,IAAI,OAAO,MAAM,GAAG;AACpB,QAAQ,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,OAAO;AACpC,KAAK,EAAE;AACP;AACA,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,SAAS,OAAO,CAAC;AAChC,IAAI,OAAO,KAAK,GAAG;AACnB,QAAQ,OAAO,EAAE,SAAS;AAC1B,QAAQ,YAAY,EAAE,cAAc;AACpC,QAAQ,OAAO,EAAE,SAAS;AAC1B,QAAQ,OAAO,EAAE,SAAS;AAC1B,KAAK,CAAC;AACN;AACA,IAAI,OAAO,MAAM,GAAG;AACpB,QAAQ,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,OAAO;AACrC,QAAQ,KAAK,EAAE,EAAE;AACjB,QAAQ,QAAQ,EAAE,EAAE;AACpB,KAAK,CAAC;AACN;AACA,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,SAAS,OAAO,CAAC;AAClC,IAAI,OAAO,MAAM,GAAG;AACpB,QAAQ,UAAU,EAAE,EAAE;AACtB,KAAK,CAAC;AACN;AACA,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL;AACA,IAAI,IAAI,aAAa,CAAC,GAAG;AACzB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,GAAG;AACxB,QAAQ,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAClC,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;AACtB,QAAQ,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK,KAAK;AACtD;AACA,YAAY,IAAI,SAAS,YAAY,QAAQ,EAAE;AAC/C,gBAAgB,MAAM,QAAQ;AAC9B,oBAAoB,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK;AACnE,wBAAwB,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK,CAAC,QAAQ,GAAG,KAAK;AAC1E,4BAA4B,EAAE,CAAC;AAC/B,gBAAgB,IAAI,KAAK,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC9E,qBAAqB,IAAI,IAAI,QAAQ,CAAC;AACtC,aAAa;AACb;AACA,iBAAiB;AACjB,gBAAgB,QAAQ,SAAS,CAAC,IAAI;AACtC,oBAAoB,KAAK,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE;AAClD,wBAAwB,gBAAgB,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9H,wBAAwB,IAAI,IAAI,gBAAgB,CAAC;AACjD,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,KAAK,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE;AAClD,wBAAwB,gBAAgB,GAAG,CAAC;AAC5C;AACA,0DAA0D,EAAE,SAAS,CAAC,KAAK,CAAC;AAC5E,6CAA6C,EAAE,SAAS,CAAC,KAAK,CAAC;AAC/D,oDAAoD,EAAE,SAAS,CAAC,KAAK,CAAC;AACtE;AACA,wBAAwB,CAAC,CAAC;AAC1B,wBAAwB,IAAI,IAAI,gBAAgB,CAAC;AACjD,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,KAAK,SAAS,CAAC,KAAK,CAAC,YAAY,EAAE;AACvD,wBAAwB,gBAAgB,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,wBAAwB,IAAI,SAAS,CAAC,QAAQ,EAAE,gBAAgB,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC9F,wBAAwB,IAAI,IAAI,gBAAgB,CAAC;AACjD,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,QAAQ,OAAO,IAAI,QAAQ,EAAE,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;AACrD,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,SAAS,WAAW,CAAC;AAC1C,IAAI,OAAO,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC;AAC1D,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,aAAa,SAAS,OAAO,CAAC;AACpC,IAAI,OAAO,MAAM,GAAG,EAAE,CAAC;AACvB,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,SAAS,OAAO,CAAC;AACrC,IAAI,OAAO,MAAM,GAAG,EAAE,CAAC;AACvB,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,OAAO,CAAC;AACvC,IAAI,OAAO,MAAM,GAAG;AACpB,QAAQ,KAAK,EAAE,EAAE;AACjB,KAAK,CAAC;AACN;AACA,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,GAAG;AAChB,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,SAAS,OAAO,CAAC;AACvC,IAAI,OAAO,MAAM,GAAG;AACpB,QAAQ,KAAK,EAAE,EAAE;AACjB,KAAK,CAAC;AACN;AACA,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,KAAK,CAAC,KAAK,CAAC,CAAC;AACrB,KAAK;AACL;;AC7PA,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,IAAI,OAAO,GAAG,EAAE,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK,EAAE,OAAO,GAAG,EAAE,EAAE;AAC9B,IAAI,KAAK,GAAG,OAAO,CAAC;AACpB;AACA,IAAI,IAAI,KAAK,GAAG,OAAO,CAAC;AACxB,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC;AACxB,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC;AACvB,IAAI,IAAI,eAAe,GAAG,KAAK,CAAC;AAChC,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAI,IAAI,mBAAmB,GAAG,KAAK,CAAC;AACpC,IAAI,IAAI,mBAAmB,GAAG,KAAK,CAAC;AACpC,IAAI,IAAI,uBAAuB,GAAG,IAAI,CAAC;AACvC;AACA,IAAI,OAAO,KAAK,KAAK,MAAM,EAAE;AAC7B,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,QAAQ,QAAQ,KAAK;AACrB;AACA,YAAY,KAAK,OAAO,EAAE;AAC1B,gBAAgB,gBAAgB,EAAE,CAAC;AACnC,gBAAgB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAgB,IAAI,IAAI,KAAK,GAAG,EAAE;AAClC,oBAAoB,KAAK,GAAG,SAAS,CAAC;AACtC,oBAAoB,SAAS,GAAG,IAAI,gBAAgB,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AAC1E,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB;AACA,gBAAgB,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AAC/D,gBAAgB,MAAM,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACjE,gBAAgB,MAAM,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACnE,gBAAgB,MAAM,QAAQ,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AAClE,gBAAgB,MAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;AACpE,gBAAgB,IAAI,OAAO,GAAG,CAAC,CAAC;AAChC,gBAAgB,IAAI,KAAK,KAAK,KAAK,EAAE;AACrC,oBAAoB,KAAK,IAAI,CAAC,CAAC;AAC/B,oBAAoB,OAAO,GAAG,SAAS,EAAE,CAAC;AAC1C,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,GAAG,KAAK,CAAC;AACtC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,IAAI,CAAC;AACrC,qBAAqB;AACrB,oBAAoB,KAAK,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC;AAC3C,iBAAiB,MAAM,IAAI,SAAS,KAAK,SAAS,EAAE;AACpD,oBAAoB,KAAK,GAAG,QAAQ,CAAC;AACrC,iBAAiB,MAAM,IAAI,OAAO,KAAK,MAAM,EAAE;AAC/C,oBAAoB,KAAK,IAAI,CAAC,CAAC;AAC/B,oBAAoB,OAAO,GAAG,SAAS,EAAE,CAAC;AAC1C,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,KAAK,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC;AAC3C,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,GAAG,KAAK,CAAC;AACtC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,qBAAqB;AACrB,iBAAiB,MAAM,IAAI,QAAQ,KAAK,OAAO,EAAE;AACjD,oBAAoB,KAAK,IAAI,CAAC,CAAC;AAC/B,oBAAoB,OAAO,GAAG,SAAS,EAAE,CAAC;AAC1C,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,KAAK,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC;AAC3C,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,GAAG,KAAK,CAAC;AACtC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,OAAO,CAAC;AACxC,qBAAqB;AACrB,iBAAiB,MAAM,IAAI,UAAU,KAAK,UAAU,EAAE;AACtD,oBAAoB,KAAK,IAAI,CAAC,CAAC;AAC/B,oBAAoB,OAAO,GAAG,SAAS,EAAE,CAAC;AAC1C,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,KAAK,OAAO,GAAG,CAAC,CAAC,CAAC;AAC/C,wBAAwB,KAAK,GAAG,KAAK,CAAC;AACtC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,OAAO,CAAC;AACxC,wBAAwB,SAAS,GAAG,IAAI,gBAAgB,CAAC,EAAE,QAAQ,EAAE,KAAK,IAAI,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAC9F,qBAAqB;AACrB,iBAAiB,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AAC/C,oBAAoB,KAAK,GAAG,KAAK,CAAC;AAClC,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,GAAG,KAAK,CAAC;AAClC,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,IAAI,EAAE;AACvB,gBAAgB;AAChB,oBAAoB,uBAAuB;AAC3C,oBAAoB,EAAE,uBAAuB,YAAY,cAAc,CAAC;AACxE,kBAAkB;AAClB,oBAAoB,OAAO,GAAG,eAAe,CAAC;AAC9C,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBAAgB,uBAAuB,GAAG,SAAS,GAAG,IAAI,WAAW,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AAC3F,gBAAgB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AAC3C,gBAAgB,IAAI,CAAC,KAAK,IAAI,EAAE;AAChC,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBAAgB,KAAK,GAAG,WAAW,CAAC;AACpC,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,QAAQ,EAAE;AAC3B,gBAAgB;AAChB,oBAAoB,cAAc,EAAE,CAAC,WAAW,EAAE,KAAK,MAAM;AAC7D,oBAAoB,SAAS,EAAE,KAAK,CAAC;AACrC,oBAAoB,cAAc,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI;AAC3D,oBAAoB,SAAS,EAAE,KAAK,CAAC;AACrC,kBAAkB;AAClB,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBAAgB;AAChB,oBAAoB,CAAC,uBAAuB;AAC5C;AACA,wBAAwB,EAAE,uBAAuB,YAAY,eAAe,CAAC;AAC7E,wBAAwB,EAAE,uBAAuB,YAAY,WAAW,CAAC;AACzE,qBAAqB;AACrB,kBAAkB;AAClB,oBAAoB,OAAO,GAAG,oBAAoB,CAAC;AACnD,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBAAgB,uBAAuB,GAAG,SAAS,GAAG,IAAI,eAAe,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AAC/F,gBAAgB,KAAK,GAAG,WAAW,CAAC;AACpC,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,MAAM,EAAE;AACzB,gBAAgB;AAChB,oBAAoB,CAAC,uBAAuB;AAC5C;AACA,wBAAwB,EAAE,uBAAuB,YAAY,WAAW,CAAC;AACzE,wBAAwB,EAAE,uBAAuB,YAAY,eAAe,CAAC;AAC7E,qBAAqB;AACrB,kBAAkB;AAClB,oBAAoB,OAAO,GAAG,iBAAiB,CAAC;AAChD,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBAAgB,uBAAuB,GAAG,SAAS,GAAG,IAAI,aAAa,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AAC7F,gBAAgB,IAAI,cAAc,EAAE,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;AAC/D,oBAAoB,KAAK,GAAG,KAAK,CAAC;AAClC,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,OAAO,EAAE;AAC1B,gBAAgB;AAChB,oBAAoB,CAAC,uBAAuB;AAC5C;AACA,wBAAwB,EAAE,uBAAuB,YAAY,WAAW,CAAC;AACzE,wBAAwB,EAAE,uBAAuB,YAAY,eAAe,CAAC;AAC7E,wBAAwB,EAAE,uBAAuB,YAAY,aAAa,CAAC;AAC3E,qBAAqB;AACrB,kBAAkB;AAClB,oBAAoB,OAAO,GAAG,kBAAkB,CAAC;AACjD,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,oBAAoB,MAAM;AAC1B,iBAAiB;AACjB,gBAAgB,uBAAuB,GAAG,SAAS,GAAG,IAAI,cAAc,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AAC9F,gBAAgB,IAAI,cAAc,EAAE,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;AAChE,oBAAoB,KAAK,GAAG,KAAK,CAAC;AAClC,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,KAAK,EAAE;AACxB,gBAAgB,SAAS,EAAE,CAAC;AAC5B,gBAAgB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AAClC,oBAAoB,gBAAgB,EAAE,CAAC;AACvC,oBAAoB,KAAK,GAAG,OAAO,CAAC;AACpC,oBAAoB,MAAM,EAAE,CAAC;AAC7B,iBAAiB,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AAC/C;AACA,oBAAoB;AACpB,wBAAwB,uBAAuB;AAC/C,wBAAwB,EAAE,uBAAuB,YAAY,cAAc,CAAC;AAC5E,sBAAsB;AACtB,wBAAwB,OAAO,GAAG,SAAS,CAAC;AAC5C,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,KAAK,GAAG,uBAAuB,CAAC,QAAQ,CAAC;AACjE,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB;AACA,oBAAoB,KAAK,GAAG,MAAM,CAAC;AACnC,oBAAoB,MAAM,EAAE,CAAC;AAC7B,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,SAAS,EAAE;AAC5B,gBAAgB,IAAI,CAAC,GAAG,EAAE,CAAC;AAC3B,gBAAgB,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AAC7C,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AACtC,wBAAwB,MAAM;AAC9B,qBAAqB,MAAM;AAC3B,wBAAwB,CAAC,IAAI,IAAI,CAAC;AAClC,wBAAwB,KAAK,EAAE,CAAC;AAChC,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;AACpC,gBAAgB,KAAK,GAAG,KAAK,CAAC;AAC9B,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,KAAK,EAAE;AACxB,gBAAgB,IAAI,OAAO,EAAE;AAC7B,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,OAAO,GAAG,KAAK,CAAC;AACxC,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB,MAAM,IAAI,MAAM,EAAE;AACnC,oBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AAC/C,oBAAoB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC3C,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,wBAAwB,MAAM,GAAG,KAAK,CAAC;AACvC,wBAAwB,KAAK,EAAE,CAAC;AAChC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB,MAAM;AACvB,oBAAoB,SAAS,GAAG,IAAI,WAAW,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AACrE,oBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AAC/C,oBAAoB,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;AACxC,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,MAAM,GAAG,IAAI,CAAC;AACtC,wBAAwB,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;AAC/D,qBAAqB,MAAM,IAAI,IAAI,KAAK,GAAG,EAAE;AAC7C,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,OAAO,GAAG,IAAI,CAAC;AACvC,wBAAwB,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;AAChE,qBAAqB,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,EAAE;AAC9D,wBAAwB,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC;AAC/D,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,KAAK,MAAM,EAAE;AACzB,gBAAgB,SAAS,EAAE,CAAC;AAC5B,gBAAgB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAgB,IAAI,IAAI,KAAK,GAAG,EAAE;AAClC,oBAAoB,KAAK,EAAE,CAAC;AAC5B,oBAAoB,KAAK,GAAG,OAAO,CAAC;AACpC,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA;AACA,YAAY,KAAK,OAAO,EAAE;AAC1B;AACA;AACA;AACA;AACA,gBAAgB,IAAI,mBAAmB,EAAE;AACzC,oBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AAC/C,oBAAoB,SAAS,CAAC,KAAK,IAAI,CAAC,CAAC;AACzC,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,SAAS,CAAC,KAAK,IAAI,GAAG,CAAC;AAC3C,oBAAoB,mBAAmB,GAAG,KAAK,CAAC;AAChD,oBAAoB,KAAK,EAAE,CAAC;AAC5B,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AACvD,wBAAwB,KAAK,GAAG,KAAK,CAAC;AACtC,qBAAqB;AACrB,iBAAiB,MAAM;AACvB,oBAAoB,SAAS,EAAE,CAAC;AAChC,oBAAoB,IAAI,CAAC,GAAG,EAAE,CAAC;AAC/B,oBAAoB,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACjD,wBAAwB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAC5C,wBAAwB;AACxB,4BAA4B,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC;AACzD,6BAA6B,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;AACvE;AACA,6BAA6B,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;AACvE,0BAA0B;AAC1B,4BAA4B,MAAM;AAClC,yBAAyB,MAAM;AAC/B,4BAA4B,CAAC,IAAI,IAAI,CAAC;AACtC,4BAA4B,KAAK,EAAE,CAAC;AACpC,yBAAyB;AACzB,qBAAqB;AACrB,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,SAAS,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC;AACnD,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,mBAAmB,GAAG,IAAI,CAAC;AACnD,qBAAqB,MAAM,IAAI,CAAC,IAAI,SAAS,CAAC,KAAK,EAAE;AACrD,wBAAwB,SAAS,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;AACnD,wBAAwB,KAAK,GAAG,KAAK,CAAC;AACtC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK,WAAW,EAAE;AAC9B,gBAAgB,SAAS,EAAE,CAAC;AAC5B,gBAAgB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC;AACA,gBAAgB,IAAI,mBAAmB,EAAE;AACzC,oBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AAC/C,oBAAoB,SAAS,CAAC,aAAa,CAAC,QAAQ,GAAG,CAAC,CAAC;AACzD,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC;AACA,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,KAAK,EAAE,CAAC;AAC5B,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,mBAAmB,GAAG,KAAK,CAAC;AACpD,wBAAwB,eAAe,GAAG,KAAK,CAAC;AAChD,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB;AACjB;AACA,qBAAqB,IAAI,eAAe,EAAE;AAC1C,oBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AAC/C,oBAAoB,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC;AACtD,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC;AACA,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,eAAe,GAAG,KAAK,CAAC;AAChD,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,qBAAqB;AACrB;AACA,yBAAyB,IAAI,IAAI,KAAK,GAAG,EAAE;AAC3C,wBAAwB,mBAAmB,GAAG,IAAI,CAAC;AACnD,wBAAwB,KAAK,EAAE,CAAC;AAChC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB;AACjB;AACA,qBAAqB,IAAI,aAAa,EAAE;AACxC,oBAAoB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,wBAAwB,MAAM;AAC9B,qBAAqB;AACrB,oBAAoB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AAC/C,oBAAoB,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC;AACtD,oBAAoB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAoB,IAAI,IAAI,KAAK,GAAG,EAAE;AACtC,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,aAAa,GAAG,KAAK,CAAC;AAC9C,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB;AACjB;AACA,qBAAqB;AACrB;AACA,oBAAoB,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;AAC1D,wBAAwB,MAAM,CAAC,GAAG,cAAc,EAAE,CAAC;AACnD,wBAAwB,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC;AACxD,4BAA4B,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,OAAO;AACzD,4BAA4B,KAAK,EAAE,CAAC;AACpC,yBAAyB,CAAC,CAAC;AAC3B,wBAAwB,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7D,wBAAwB,KAAK,GAAG,MAAM,CAAC;AACvC,qBAAqB;AACrB;AACA,yBAAyB,IAAI,IAAI,KAAK,GAAG,EAAE;AAC3C,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,eAAe,GAAG,IAAI,CAAC;AAC/C,wBAAwB,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC;AACxD,4BAA4B,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,YAAY;AAC9D,yBAAyB,CAAC,CAAC;AAC3B,wBAAwB,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7D,qBAAqB;AACrB;AACA,yBAAyB,IAAI,IAAI,KAAK,GAAG,EAAE;AAC3C,wBAAwB,KAAK,EAAE,CAAC;AAChC,wBAAwB,aAAa,GAAG,IAAI,CAAC;AAC7C,wBAAwB,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC;AACxD,4BAA4B,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,OAAO;AACzD,yBAAyB,CAAC,CAAC;AAC3B,wBAAwB,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7D,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA,YAAY,KAAK,MAAM,EAAE;AACzB,gBAAgB,SAAS,EAAE,CAAC;AAC5B,gBAAgB,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAgB,IAAI,IAAI,KAAK,GAAG,EAAE;AAClC,oBAAoB,KAAK,EAAE,CAAC;AAC5B,oBAAoB,KAAK,GAAG,WAAW,CAAC;AACxC,oBAAoB,SAAS,CAAC,UAAU,CAAC,IAAI;AAC7C,wBAAwB,IAAI,QAAQ,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClE,qBAAqB,CAAC;AACtB,iBAAiB,MAAM,IAAI,IAAI,KAAK,GAAG,EAAE;AACzC,oBAAoB,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;AACpD,oBAAoB,IAAI,IAAI,KAAK,IAAI,EAAE;AACvC,wBAAwB,KAAK,IAAI,CAAC,CAAC;AACnC,wBAAwB,KAAK,GAAG,WAAW,CAAC;AAC5C,wBAAwB,SAAS,CAAC,UAAU,CAAC,IAAI;AACjD,4BAA4B,IAAI,QAAQ,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzE,yBAAyB,CAAC;AAC1B,qBAAqB,MAAM;AAC3B,wBAAwB,KAAK,GAAG,EAAE,CAAC;AACnC,qBAAqB;AACrB,iBAAiB,MAAM,IAAI,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;AAChF,oBAAoB,KAAK,GAAG,KAAK,CAAC;AAClC,iBAAiB,MAAM;AACvB,oBAAoB,KAAK,GAAG,EAAE,CAAC;AAC/B,iBAAiB;AACjB,gBAAgB,MAAM;AACtB,aAAa;AACb;AACA,YAAY,SAAS;AACrB,gBAAgB,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3D,aAAa;AACb,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC;AACjC,IAAI,MAAM,GAAG,EAAE,CAAC;AAChB,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,IAAI,SAAS,GAAG,SAAS,CAAC;AAC1B,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,IAAI,OAAO,GAAG,EAAE,CAAC;AACjB;AACA,IAAI,OAAO,aAAa,CAAC;AACzB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,eAAe,EAAE,KAAK,EAAE;AACjC,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC;AAC7C,CAAC;AACD;AACA,SAAS,cAAc,IAAI;AAC3B,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;AACf,IAAI,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACjC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAClC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,EAAE;AAC9D,YAAY,CAAC,IAAI,IAAI,CAAC;AACtB,YAAY,KAAK,EAAE,CAAC;AACpB,SAAS,MAAM;AACf,YAAY,MAAM;AAClB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,CAAC,CAAC;AACb,CAAC;AACD;AACA,SAAS,MAAM,IAAI;AACnB,IAAI,IAAI,CAAC,SAAS,EAAE,OAAO;AAC3B,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3B,IAAI,SAAS,GAAG,SAAS,CAAC;AAC1B,CAAC;AACD;AACA,SAAS,OAAO,EAAE,IAAI,EAAE;AACxB,IAAI,OAAO,IAAI,KAAK,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AACnE,CAAC;AACD;AACA,SAAS,MAAM,EAAE,IAAI,EAAE;AACvB,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC;AACD;AACA,SAAS,QAAQ,EAAE,IAAI,GAAG,EAAE,EAAE;AAC9B,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACpD,IAAI,OAAO,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC/D,CAAC;AACD;AACA,SAAS,QAAQ,EAAE,IAAI,GAAG,EAAE,EAAE;AAC9B,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE,OAAO,KAAK,CAAC;AACzC,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACtC,IAAI,OAAO,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC;AACpC,CAAC;AACD;AACA,SAAS,SAAS,IAAI;AACtB,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACjC,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;AACnC,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY,KAAK,EAAE,CAAC;AACpB,SAAS,MAAM;AACf,YAAY,MAAM;AAClB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD;AACA,SAAS,gBAAgB,IAAI;AAC7B,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE;AACjC,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAClC,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AAC3C,YAAY,KAAK,EAAE,CAAC;AACpB,YAAY,KAAK,EAAE,CAAC;AACpB,SAAS,MAAM;AACf,YAAY,MAAM;AAClB,SAAS;AACT,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;AACD;AACA,SAAS,YAAY,EAAE,IAAI,GAAG,EAAE,EAAE,QAAQ,GAAG,CAAC,CAAC,EAAE;AACjD,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,CAAC;AACzB,IAAI,MAAM,KAAK,GAAG,+BAA+B,CAAC;AAClD,IAAI,MAAM,SAAS,GAAG,sBAAsB,CAAC;AAC7C,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;AAClB,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC;AACnB,IAAI,OAAO,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACpC,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;AAC5C,YAAY,IAAI,IAAI,KAAK,IAAI,EAAE;AAC/B,gBAAgB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;AAC3E,gBAAgB,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAC7C,gBAAgB,KAAK,IAAI,CAAC,CAAC;AAC3B,aAAa,MAAM;AACnB,gBAAgB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,gBAAgB,KAAK,IAAI,CAAC,CAAC;AAC3B,aAAa;AACb,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,YAAY,IAAI,GAAG,EAAE,CAAC;AACtB,YAAY,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,YAAY,KAAK,GAAG,EAAE,CAAC;AACvB,SAAS,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AACvC,YAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,YAAY,IAAI,GAAG,EAAE,CAAC;AACtB,YAAY,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC,YAAY,KAAK,GAAG,EAAE,CAAC;AACvB,YAAY,MAAM;AAClB,SAAS,MAAM;AACf,YAAY,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,YAAY,IAAI,IAAI,IAAI,CAAC;AACzB,YAAY,KAAK,EAAE,CAAC;AACpB,SAAS;AACT,KAAK;AACL,IAAI,MAAM,cAAc,GAAG,CAAC,CAAC;AAC7B,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;AACd,IAAI,KAAK,GAAG,CAAC,CAAC;AACd,IAAI,IAAI,WAAW,GAAG,CAAC,CAAC;AACxB,IAAI,OAAO,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE;AACrC,QAAQ,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AACjC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACtC,YAAY,WAAW,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9C,YAAY,IAAI,GAAG,KAAK,CAAC;AACzB,YAAY,MAAM;AAClB,SAAS;AACT,QAAQ,KAAK,EAAE,CAAC;AAChB,KAAK;AACL,IAAI,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;AACrB,QAAQ,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;AACpC,QAAQ,WAAW,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;AAC7D,KAAK;AACL,IAAI,KAAK,GAAG,cAAc,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,cAAc,CAAC;AAC9D,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC;AACtB,IAAI,IAAI,cAAc,GAAG,CAAC,CAAC;AAC3B,IAAI,OAAO,KAAK,IAAI,IAAI,EAAE,KAAK,EAAE,EAAE;AACnC,QAAQ,MAAM,GAAG,GAAG,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;AAClD,QAAQ,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC;AACpC,QAAQ,IAAI,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;AAC5C,KAAK;AACL,IAAI,cAAc,IAAI,WAAW,CAAC;AAClC,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC;AACjD,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,UAAU,CAAC;AACpD,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,4EAA4E,CAAC;AACtH,IAAI,OAAO,IAAI,CAAC;AAChB;;ACzoBO,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,KAAK,KAAK;AACnC,IAAI,MAAM,MAAM,GAAG,YAAY,CAAC;AAChC;AACA,IAAI,IAAI,MAAM,CAAC,eAAe,CAAC,IAAI,KAAK,EAAE;AAC1C,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;AAC5F,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxB,KAAK,MAAM;AACX,QAAQ,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;AAC5F,KAAK;AACL;AACA,CAAC,CAAC;AACF;AACO,MAAM,YAAY,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,OAAO,IAAI;AACxC,IAAI,IAAI,CAACA,wBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACnC,QAAQ,OAAO,GAAGA,wBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,IAAI,CAACC,sBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACjC,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB,IAAI,IAAI;AACR,QAAQ,UAAU,GAAG,KAAK,CAACA,sBAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,gBAAgB,CAAC,CAAC;AACjH,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,QAAQ,GAAG,CAAC,OAAO,GAAG,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;AAC1C,KAAK;AACL,IAAI,KAAK,IAAI,OAAO,IAAI,UAAU,EAAE;AACpC,QAAQ,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC;AACrD,QAAQ,MAAM,UAAU,GAAGD,wBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACjD,QAAQ,IAAI,aAAa,CAACA,wBAAI,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;AACrF,KAAK;AACL,IAAI,OAAO,KAAK,CAAC;AACjB,CAAC;;AC9CD;AACA;AACA;AACA;AAqBA;AACA,SAAS,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;AAC7B,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE;AAC5B,QAAQ,OAAO,IAAIE,uBAAG,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;AACnD,KAAK,MAAM;AACX,QAAQ,OAAOF,wBAAI,CAAC,OAAO,CAACA,wBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;AACvD,KAAK;AACL,CAAC;AACD;AACA,SAAS,yBAAyB,EAAE,SAAS,GAAG,EAAE,EAAE;AACpD,IAAI,CAAC;AACL,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG;AACnC,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;AACzD,SAAS;AACT,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG;AACnC,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AACnE,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC7E,SAAS;AACT,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG;AACpC,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AACnE,YAAY,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7D,SAAS;AACT,KAAK,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,gBAAgB,GAAG;AACzB,IAAI,SAAS;AACb,IAAI,SAAS;AACb,IAAI,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,IAAI;AAC5C,IAAI,SAAS,GAAG,CAAC;AACjB,KAAK;AACL,IAAI,IAAI,GAAG,CAAC;AACZ,IAAI,IAAI,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AACxC,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAGG,yBAAK,EAAE;AAC1B,KAAK,MAAM,IAAI,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAC9C,QAAQ,CAAC,EAAE,GAAG,EAAE,GAAGC,wBAAI,EAAE;AACzB,KAAK;AACL,IAAI,IAAI,WAAW,GAAG,SAAS,IAAI,OAAO,SAAS,KAAK,UAAU,CAAC;AACnE,IAAI,IAAI,IAAI,CAAC;AACb,IAAI,IAAI,CAAC,CAAC;AACV,IAAI,IAAI,CAAC,WAAW,EAAE;AACtB,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;AACvC,KAAK,MAAM;AACX,QAAQ,IAAI,GAAG,SAAS,CAAC;AACzB,KAAK;AACL,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,MAAM;AACrC,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;AACtC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;AACpB,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;AACjB,QAAQ,YAAY,CAAC,SAAS,CAAC,CAAC;AAChC,KAAK,EAAE,OAAO,CAAC,CAAC;AAChB,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI;AACpC,QAAQ,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,EAAE;AAC1D,YAAY,YAAY,CAAC,SAAS,CAAC,CAAC;AACpC,YAAY,IAAI,SAAS,KAAK,CAAC,EAAE;AACjC,gBAAgB,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;AAClD,gBAAgB,IAAI,CAAC,EAAE,CAAC,CAAC;AACzB,gBAAgB,OAAO;AACvB,aAAa;AACb,YAAY,MAAM,CAAC,GAAG,IAAIF,uBAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC7C,YAAY,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;AAChD,YAAY,MAAM,WAAW,GAAG,IAAIA,uBAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;AAC/E,YAAY,gBAAgB,CAAC,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,SAAS,CAAC,CAAC;AACtE,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,EAAE;AACnC,YAAY,YAAY,CAAC,SAAS,CAAC,CAAC;AACpC,YAAY,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,iBAAiB,EAAE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACnE,YAAY,IAAI,CAAC,EAAE,CAAC,CAAC;AACrB,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AAC9D,YAAY,GAAG,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,8BAA8B,CAAC,CAAC,CAAC;AAC/D,YAAY,YAAY,CAAC,SAAS,CAAC,CAAC;AACpC,YAAY,IAAI,CAAC,EAAE,CAAC,CAAC;AACrB,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;AACrB,QAAQ,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;AACpD,QAAQ,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM;AAC5B,YAAY,YAAY,CAAC,SAAS,CAAC,CAAC;AACpC,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AACpD,SAAS,CAAC,CAAC;AACX,KAAK,CAAC,CAAC;AACP,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACvC,IAAI,IAAI,CAAC,WAAW,EAAE;AACtB,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,EAAE,OAAO,EAAE;AAC1B,IAAI,IAAI,CAACF,wBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACnC,QAAQ,OAAO,GAAGA,wBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,IAAI,CAACC,sBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACjC,QAAQ,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACtC,QAAQ,OAAO;AACf,KAAK;AACL,IAAI,MAAM,OAAO,GAAGA,sBAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9D,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB,IAAI,IAAI;AACR,QAAQ,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,QAAQ,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC1C,KAAK;AACL;AACA;AACA,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AAC5D,QAAQ,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY;AACZ,gBAAgB;AAChB,oBAAoB,WAAW;AAC/B,oBAAoB,eAAe;AACnC,oBAAoB,aAAa;AACjC,oBAAoB,cAAc;AAClC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,YAAY,CAAC,CAAC;AACnD,cAAc;AACd,gBAAgB,UAAU,GAAG,KAAK,CAAC;AACnC,aAAa,MAAM;AACnB,gBAAgB,SAAS;AACzB,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,SAAS,YAAY,WAAW,EAAE;AAC9C,YAAY,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5D,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,gBAAgB,EAAE;AACxD,YAAY,MAAM,CAAC,IAAI;AACvB,gBAAgB,IAAI;AACpB,gBAAgB,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC;AACxD,aAAa,CAAC;AACd,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,eAAe,EAAE;AACvD,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,aAAa,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,YAAY,IAAI,CAAC,aAAa,EAAE;AAChC,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,aAAa;AACb,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,WAAW,EAAE;AACnD,YAAY,aAAa,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,YAAY,IAAI,CAAC,aAAa,EAAE;AAChC,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,aAAa;AACb,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,aAAa,EAAE;AACrD,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,gBAAgB,SAAS;AACzB,aAAa;AACb,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,cAAc,EAAE;AACtD,YAAY,aAAa,GAAG,KAAK,CAAC;AAClC,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW,EAAE,OAAO,EAAE;AACrC,IAAI,IAAI,OAAO,GAAG,EAAE,CAAC;AACrB,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,EAAE;AAC/B,QAAQ,OAAO,GAAG,MAAM,gBAAgB,CAAC,OAAO,CAAC,CAAC;AAClD,KAAK,MAAM;AACX,QAAQ,IAAI,CAACD,wBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,OAAO,GAAGA,wBAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvE,QAAQ,IAAI,CAACC,sBAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;AACrC,YAAY,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AAC1C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,OAAO,GAAGA,sBAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC5D,KAAK;AACL;AACA,IAAI,IAAI,UAAU,GAAG,EAAE,CAAC;AACxB,IAAI,IAAI;AACR,QAAQ,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AACpC,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,QAAQ,GAAG,CAAC,OAAO,GAAG,MAAM,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;AAC1C,KAAK;AACL;AACA;AACA,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC;AAC9B,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC;AAC3B,IAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AAC5D,QAAQ,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAQ,IAAI,UAAU,EAAE;AACxB,YAAY;AACZ,gBAAgB;AAChB,oBAAoB,WAAW;AAC/B,oBAAoB,eAAe;AACnC,oBAAoB,aAAa;AACjC,oBAAoB,cAAc;AAClC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,YAAY,CAAC,CAAC;AACnD,cAAc;AACd,gBAAgB,UAAU,GAAG,KAAK,CAAC;AACnC,aAAa,MAAM;AACnB,gBAAgB,SAAS;AACzB,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,SAAS,YAAY,WAAW,EAAE;AAC9C,YAAY,yBAAyB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5D,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,gBAAgB,EAAE;AACxD,YAAY,MAAM,WAAW,CAAC,IAAI;AAClC,gBAAgB,IAAI;AACpB,gBAAgB,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC;AACxD,aAAa,CAAC;AACd,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,eAAe,EAAE;AACvD,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,gBAAgB,SAAS;AACzB,aAAa;AACb,YAAY,aAAa,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,YAAY,IAAI,CAAC,aAAa,EAAE;AAChC,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,aAAa;AACb,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,WAAW,EAAE;AACnD,YAAY,aAAa,GAAG,SAAS,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpE,YAAY,IAAI,CAAC,aAAa,EAAE;AAChC,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,aAAa;AACb,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,aAAa,EAAE;AACrD,YAAY,IAAI,aAAa,EAAE;AAC/B,gBAAgB,UAAU,GAAG,IAAI,CAAC;AAClC,gBAAgB,SAAS;AACzB,aAAa;AACb,SAAS;AACT,aAAa,IAAI,SAAS,YAAY,cAAc,EAAE;AACtD,YAAY,aAAa,GAAG,KAAK,CAAC;AAClC,SAAS;AACT,KAAK;AACL;;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAe,CAAC,OAAO,EAAE,OAAO,KAAK;AACrC,IAAI,IAAI,OAAO,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,iBAAiB,EAAE;AACpE,QAAQ,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;AAC9C,QAAQ,IAAI,QAAQ,KAAK,SAAS,IAAI,OAAO,QAAQ,KAAK,SAAS,EAAE;AACrE,YAAY,MAAM,CAAC,eAAe,CAAC,GAAG,QAAQ,CAAC;AAC/C,SAAS;AACT,QAAQ,IAAI,OAAO,KAAK,OAAO,OAAO,KAAK,QAAQ,CAAC,IAAI,OAAO,GAAG,CAAC,EAAE;AACrE,YAAY,MAAM,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC;AAC7C,SAAS;AACT,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,EAAE,CAAC;AACvB,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,aAAa,CAAC,OAAO,CAAC,EAAE;AACzD,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC;AACtE,KAAK,MAAM;AACX,QAAQ,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACtC,QAAQ,OAAO,OAAO,CAAC;AACvB,KAAK;AACL,CAAC;;;;"}