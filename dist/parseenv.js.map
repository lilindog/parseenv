{"version":3,"file":"parseenv.js","sources":["../src/regs.js","../src/constans.js","../src/helper.js","../src/getEnv.js","../src/parseIFStatements.js","../src/main.js"],"sourcesContent":["// 语句开始\r\nconst start = `(?<=(?:^|\\\\n) *)`;\r\n// 语句结束\r\nconst end = `(?= *(?:\\\\r\\\\n|\\\\n|$))`;\r\n// key声明\r\nconst identifier = `[a-z_](?:\\\\w|_)*`;\r\n// 值,不能是空格，换行、中括号、大括号\r\nconst value = `[^\\\\r\\\\n\\\\ ]+`;\r\n// list声明\r\nconst list = `${identifier}\\\\[\\\\]`;\r\n// map语法检测\r\nconst map = `${identifier}\\\\{${identifier}\\\\}`;\r\n// if语句的等于与不等于\r\nconst equa = `(?:=|!=)`;\r\n// if语句使用变量\r\nconst usevariable = `\\\\[(?:${identifier}|${map})\\\\]`;\r\n// 环境变量插值\r\nconst envinsert = `\\\\{${identifier}\\\\}`;\r\n// if条件单元\r\nconst ifcondition = `(?:${usevariable}|${envinsert}|[^\\\\[\\\\]\\\\{\\\\}\\\\r\\\\n ]+)`;\r\n// if和else if语句\r\nconst ifelseif = `${start}(?:if|else *if) *?${ifcondition}(?: *${equa} *${ifcondition})?${end}`;\r\n// if 条件语句包括（if else if else endif）\r\nconst if_elseif_else_endif = `(?:${ifelseif}|${start}else${end}|${start}endif${end})`;\r\nconst KVStatement = `${start}(?:${identifier}|${map}|${list}) *= *${value}${end}`;\r\nconst includeStatement = `${start}include *${value}${end}`;\r\n\r\nexport const IF_STATEMENT = new RegExp(if_elseif_else_endif, \"ig\");\r\nexport const ONE_IF_CONDITION = new RegExp(`^(?:if|else *if) +?(${ifcondition})$`, \"ig\");\r\nexport const TWO_IF_CONDITION = new RegExp(`^(?:if|else *if) +?(${ifcondition}) *(${equa}) *(${ifcondition})$`, \"ig\");\r\nexport const STATEMENT = new RegExp(`(?:${KVStatement}|${includeStatement})`, \"ig\");\r\nexport const INCLUDE_REG = new RegExp(includeStatement, \"ig\");\r\nexport const KV_STATEMENT = new RegExp(KVStatement, \"ig\");\r\nexport const ENV_INJECTION = /(?<!\\\\)\\{([^\\}]+)\\}(?!\\\\)/ig;                                   ","export const kConfigIsStrict = Symbol(\"k_config_is_strict\");","import { INCLUDE_REG, ENV_INJECTION } from \"./regs.js\";\r\nimport { kConfigIsStrict } from \"./constans.js\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\n\r\nexport const log = (msg, isErr) => {\r\n    const prefix = \"[Parseenv]\";\r\n    /* eslint-disable no-console */\r\n    if (global[kConfigIsStrict] || isErr) {\r\n        console.log(\"\\x1b[41m\", \"\\x1b[37m\", prefix, \"\\x1b[40m\", \"\\x1b[31m\", msg, \"\\x1b[0m\");\r\n        process.exit(1);\r\n    } else {\r\n        console.log(\"\\x1b[45m\", \"\\x1b[37m\", prefix, \"\\x1b[40m\", \"\\x1b[33m\", msg, \"\\x1b[0m\");\r\n    }\r\n    /* eslint-disable no-console */\r\n};\r\n\r\nexport const isRemotePath = path => path.startsWith(\"http\");\r\n\r\n/**\r\n * 检测本地env文件中是否包含远程include路径（包含嵌套env中的include）\r\n *\r\n * @param {String} envPath 主env文件路径\r\n * @return {Boolean}\r\n * @public\r\n */\r\nexport const hasRemotePath = envPath => {\r\n    if (!path.isAbsolute(envPath)) {\r\n        envPath = path.resolve(envPath);\r\n    }\r\n    if (!fs.existsSync(envPath)) {\r\n        return false;\r\n    }\r\n    const includePaths = getIncludePathsFromString(fs.readFileSync(envPath).toString(\"utf8\"));\r\n    if (includePaths.some(isRemotePath)) return true;\r\n    for (let includePath of includePaths) {\r\n        const envPathDir = path.dirname(envPath);\r\n        if (hasRemotePath(path.resolve(envPathDir, includePath))) return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * 解析键值对到上下文\r\n *\r\n * @param {Object} context 结果上下文\r\n * @param {String} str kv对语句\r\n * @return {void}\r\n * @public\r\n */\r\nexport const parseKV2Context = (context, str) => {\r\n    str = str.replace(/ +/g, \" \");\r\n    let [ key, value ] = str.split(\"=\"); // value部分若有=号可能会发生异常\r\n    key = key.trim();\r\n    value = value.trim();\r\n    // map\r\n    if (key.includes(\"{\") && key.slice(-1) === \"}\") {\r\n        const l_index = key.indexOf(\"{\");\r\n        let field = key.slice(0, l_index);\r\n        let property = key.slice(l_index + 1, -1);\r\n        if (!context[field]) context[field] = {};\r\n        context[field][property] = handleValue(value);\r\n    }\r\n    // list\r\n    else if (key.slice(-2, 1) === \"[\" && key.slice(-1) === \"]\") {\r\n        let field = key.slice(0, -2);\r\n        if (!context[field]) context[field] = [];\r\n        context[field].push(handleValue(value));\r\n    }\r\n    // kv\r\n    else {\r\n        context[key] = handleValue(value);\r\n    }\r\n};\r\n\r\n/**\r\n * 解析字符串里的所有include的路径集合\r\n *\r\n * @param {String} str env文件内容\r\n * @return {Array<String>}\r\n */\r\nexport const getIncludePathsFromString = (str, isHandleEnvironmentVariable = true) => {\r\n    return (str.match(INCLUDE_REG) || [])\r\n        .map(statement => statement.replace(/ +/g, \" \").split(\" \")[1])\r\n        .map(isHandleEnvironmentVariable ? handleEnvironmentVariable : item => item);\r\n};\r\n\r\n/**\r\n * 处理表达式右侧语句的环境变量插值和其转义\r\n *\r\n * @param {String} value\r\n * @return {String}\r\n * @public\r\n */\r\nexport const handleEnvironmentVariable = value => {\r\n    const envInjectTags = value.match(ENV_INJECTION);\r\n    if (!envInjectTags) return value;\r\n    let field, property;\r\n    [...new Set(envInjectTags)].forEach(tag => {\r\n        field = tag.replace(/[\\{\\}]/g, \"\");\r\n        property = process.env[field];\r\n        if (property === undefined) log(`环境变量 \"${field}\" 不存在！`);\r\n        value = value.replace(new RegExp(tag, \"g\"), property || tag);\r\n    });\r\n    return value;\r\n};\r\n\r\n/**\r\n * 处理变量值的类型问题\r\n *\r\n * @param {String} value\r\n * @returns {(Number|String)}\r\n */\r\nconst handleValue = value => {\r\n    value = value.trim();\r\n    value = handleEnvironmentVariable(value);\r\n    const isNumber = /^\\d+$/.test(value);\r\n    return isNumber ? Number(value) : value;\r\n};","/**\r\n * 该模块主要处理env（包括嵌套的）文件为字符串数组\r\n * 嵌套的按照嵌套的优先级处理\r\n */\r\n\r\nimport http from \"http\";\r\nimport https from \"https\";\r\nimport url from \"url\";\r\nimport path from \"path\";\r\nimport fs from \"fs\";\r\nimport {\r\n    getIncludePathsFromString,\r\n    handleEnvironmentVariable,\r\n    isRemotePath,\r\n    log\r\n} from \"./helper.js\";\r\n\r\n/**\r\n * 解析结果节点\r\n *\r\n * @public\r\n */\r\nexport class EnvNode {\r\n    /**\r\n     * EnvNode节点的字段\r\n     *\r\n     * path 节点的路径，http/s链接或者文件绝对路径\r\n     * name include语句时右边的语句，一般是相对路径或者名字\r\n     * content 节点的string内容\r\n     * includes 子节点数组，元素类型为EnvNode\r\n     */\r\n    static Fields = {\r\n        path: \"\",\r\n        name: \"\",\r\n        content: \"\",\r\n        includes: []\r\n    };\r\n\r\n    constructor (options = {}) {\r\n        const Fields = JSON.parse(JSON.stringify(EnvNode.Fields));\r\n        Reflect.ownKeys(Fields).forEach(k => this[k] = options[k] ?? Fields[k]);\r\n    }\r\n}\r\n\r\n/**\r\n * 请求远程url的env文件\r\n *\r\n * @param {String} remoteUrl http或者https链接\r\n * @param {Function} resolveCb 递归回调，重定向时内部使用，外部不要传递\r\n * @param {Number} timeout 超时\r\n * @param {Number} redirects 重定向次数限制\r\n * @return {Promise<string>}\r\n * @private\r\n */\r\nconst getRemoteEnv = (\r\n    remoteUrl,\r\n    resolveCb,\r\n    timeout = 1000,\r\n    redirects = 1\r\n) => {\r\n    let get;\r\n    if (remoteUrl.startsWith(\"https:\")) {\r\n        ({ get } = https);\r\n    } else if (remoteUrl.startsWith(\"http:\")) {\r\n        ({ get } = http);\r\n    }\r\n    let isResolveCb = resolveCb && typeof resolveCb === \"function\";\r\n    let done;\r\n    let p;\r\n    if (!isResolveCb) {\r\n        p = new Promise(r => done = r);\r\n    } else {\r\n        done = resolveCb;\r\n    }\r\n    let timeoutId = setTimeout(() => {\r\n        log(`\"${remoteUrl}\" 文件加载超时！`);\r\n        r.destroy();\r\n        done(\"\");\r\n        clearTimeout(timeoutId);\r\n    }, timeout);\r\n    const r = get(remoteUrl, res => {\r\n        if (res.statusCode < 400 && res.statusCode > 300) {\r\n            clearTimeout(timeoutId);\r\n            if (redirects === 0) {\r\n                log(`\"${remoteUrl}\" 文件重回定向次数溢出！`);\r\n                done(\"\");\r\n                return;\r\n            }\r\n            const u = new url.URL(remoteUrl);\r\n            u.hostname = u.hash = u.search = \"\";\r\n            const redirectUrl = new url.URL(res.headers.location, u.href).href;\r\n            getRemoteEnv(redirectUrl, done, timeout, --redirects);\r\n            return;\r\n        }\r\n        if (res.statusCode >= 400) {\r\n            clearTimeout(timeoutId);\r\n            log(`\"${remoteUrl}\" env文件加载失败！code ${res.statusCode}`);\r\n            done(\"\");\r\n            return;\r\n        }\r\n        if (!res.headers[\"content-type\"].startsWith(\"text/\")) {\r\n            log(`\"${remoteUrl}\" 文件content-type错误，应为text/xxx!`);\r\n            clearTimeout(timeoutId);\r\n            done(\"\");\r\n            return;\r\n        }\r\n        let buf = [];\r\n        res.on(\"data\", chunk => buf.push(...chunk));\r\n        res.on(\"end\", () => {\r\n            clearTimeout(timeoutId);\r\n            done(Buffer.from(buf).toString(\"utf8\"));\r\n        });\r\n    });\r\n    r.on(\"error\", done.bind(null, \"\"));\r\n    if (!isResolveCb) {\r\n        return p;\r\n    }\r\n};\r\n\r\n/**\r\n * 解析本地env\r\n *\r\n * @param {String} envPath env入口文件路径，可以是相对也可以是绝对\r\n * @param {Array<string>} origins 文件的遍历进来的路径集合, 该参数递归传递，无需干预\r\n * @return {Array<EnvNode>}\r\n * @public\r\n */\r\nconst getEnv = (envPath, name) => {\r\n    let envNode = new EnvNode({ name: name ?? envPath });\r\n    if (!path.isAbsolute(envPath)) {\r\n        envPath = path.resolve(envPath);\r\n    }\r\n    if (!fs.existsSync(envPath)) {\r\n        log(`\"${envPath}\" env文件不存在！`);\r\n        return new EnvNode;\r\n    }\r\n    const content = fs.readFileSync(envPath).toString(\"utf8\");\r\n    envNode.path = envPath;\r\n    envNode.content = content;\r\n    const includePaths = getIncludePathsFromString(content);\r\n    includePaths.forEach(includePath => {\r\n        const name = includePath;\r\n        includePath = handleEnvironmentVariable(includePath);\r\n        const envPathDir = path.dirname(envPath);\r\n        includePath = path.resolve(envPathDir, includePath);\r\n        envNode.includes.push(getEnv(includePath, name));\r\n    });\r\n    return envNode;\r\n};\r\n\r\n/**\r\n * 解析含有远程url include的env文件\r\n *\r\n * @param {String} envPath 可以是远程url，也可以是本地文件路径path，远程路径必须为http/s， 本地则可以是相对或绝对\r\n * @return {Promise<String>} 遵循include规则处理后的env文件string内容组成的数组\r\n * @public\r\n */\r\nconst getEnvAsync = async (envPath, name) => {\r\n    // 暂未考虑include同文件去重，或全局去重（不同包含层级）等问题。\r\n    // 默认还是以后来者居上原则\r\n    let envNode = new EnvNode({ name:  name ?? envPath });\r\n    const isRemoteLink = isRemotePath(envPath);\r\n    if (isRemoteLink) {\r\n        const content = await getRemoteEnv(envPath);\r\n        envNode.path = envPath;\r\n        envNode.content = content;\r\n        const includePaths = getIncludePathsFromString(content);\r\n        for (let includePath of includePaths) {\r\n            const name = includePath;\r\n            includePath = handleEnvironmentVariable(includePath);\r\n            includePath = new url.URL(includePath, envPath).href;\r\n            envNode.includes.push( (await getEnvAsync(includePath, name)) );\r\n        }\r\n    } else {\r\n        if (!path.isAbsolute(envPath)) {\r\n            envPath = path.resolve(envPath);\r\n        }\r\n        if (!fs.existsSync(envPath)) {\r\n            log(`\"${envPath}\" env文件不存在！`);\r\n            return new EnvNode;\r\n        }\r\n        const content = fs.readFileSync(envPath).toString(\"utf8\");\r\n        envNode.path = envPath;\r\n        envNode.content = content;\r\n        const includePaths = getIncludePathsFromString(content, false);\r\n        for (let includePath of includePaths) {\r\n            const name = includePath;\r\n            includePath = handleEnvironmentVariable(includePath);\r\n            if (isRemotePath(includePath)) {\r\n                envNode.includes.push( (await getEnvAsync(includePath, name)) );\r\n            } else {\r\n                includePath = path.resolve(path.dirname(envPath), includePath);\r\n                envNode.includes.push( (await getEnvAsync(includePath, name)) );\r\n            }\r\n        }\r\n    }\r\n    return envNode;\r\n};\r\n\r\nexport { getEnvAsync, getEnv };","import { log } from \"./helper.js\";\r\nimport { EnvNode } from \"./getEnv.js\";\r\nimport { IF_STATEMENT, ONE_IF_CONDITION, TWO_IF_CONDITION } from \"./regs.js\";\r\n\r\nlet node;\r\n\r\nclass IFStatementInfo {\r\n    static Types = {\r\n        IF: \"IF\",\r\n        ELSE: \"ELSE\",\r\n        ELSEIF: \"ELSEIF\",\r\n        ENDIF: \"ENDIF\"\r\n    }\r\n\r\n    /**\r\n     * IFStatementInfo 字段说明\r\n     *\r\n     * type 表达式类型\r\n     * statement 表达式\r\n     * line 表达式在env内容字符串中的行数\r\n     * position 表达式在env内容字符串中的开始位置索引\r\n     * exec 执行statment条件的函数，返回表达式最终计算结果\r\n     */\r\n    static Fields = {\r\n        type: \"\",\r\n        statement: \"\",\r\n        line: -1,\r\n        position: -1,\r\n        exec: \"\"\r\n    }\r\n\r\n    constructor (options = {}) {\r\n        const Fields = JSON.parse(JSON.stringify(IFStatementInfo.Fields));\r\n        Reflect.ownKeys(Fields).forEach(k => this[k] = options[k] ?? Fields[k]);\r\n    }\r\n}\r\n\r\n/**\r\n * 获取ifelse表达式的节点数据 \r\n * \r\n * @param {String} input env内容字符串\r\n * @param {Array}\r\n * @public\r\n */\r\nconst getIFStatementInfo = input => {\r\n    const matches = [];\r\n    /* eslint-disable */\r\n    while (true) {\r\n    /* eslint-enable */\r\n        const r = IF_STATEMENT.exec(input);\r\n        r && matches.push(r);\r\n        if (!r) break;\r\n    }\r\n    const lines = getLines();\r\n    const result = [];\r\n    for (let match of matches) {\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const row = lines[i];\r\n            if (row.includes(match.index)) {\r\n                const type = getStatementType(match[0]);\r\n                const isNeedExec = [\r\n                    IFStatementInfo.Types.IF,\r\n                    IFStatementInfo.Types.ELSEIF\r\n                ].includes(type);\r\n                const ifStatementInfo = new IFStatementInfo({\r\n                    type,\r\n                    statement: match[0],\r\n                    line: i + 1,\r\n                    position: match.index,\r\n                    exec: isNeedExec ? getStatementExecFunction(match[0]) : () => {}\r\n                });\r\n                result.push(ifStatementInfo);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n    function getStatementExecFunction (statement = \"\") {\r\n        ONE_IF_CONDITION.lastIndex = 0;\r\n        TWO_IF_CONDITION.lastIndex = 0;\r\n        const oic = ONE_IF_CONDITION.exec(statement);\r\n        const tic = TWO_IF_CONDITION.exec(statement);\r\n        if (oic) {\r\n            const [, condition ] = oic;\r\n            const _ = handleCondition(condition);\r\n            let code = `return ${_};`;\r\n            return new Function(code); // 目前，不是 if、else if 的语句会返回空函数，如：ELSE ENDIF 就会返回空函数\r\n        } else if (tic) {\r\n            const [, leftCondition, flag, rightCondition ] = tic;\r\n            let equa = flag === \"!=\" ? \" !== \" : flag === \"=\" ? \" === \" : undefined;\r\n            let l = handleCondition(leftCondition);\r\n            let r = handleCondition(rightCondition);\r\n            let code = `return ${l}${equa}${r};`;\r\n            return new Function(code);\r\n        }\r\n        function handleCondition (condition = \"\") {\r\n            // use variable\r\n            if (condition[0] === \"[\" && condition.slice(-1)[0] === \"]\") {\r\n                const l = condition.indexOf(\"{\");\r\n                const r = condition.indexOf(\"}\");\r\n                if (l > -1 && r > -1) {\r\n                    return \"this?.\" + condition.slice(1, l) + \"?.\" + condition.slice(l + 1, r);\r\n                } else {\r\n                    return \"this?.\" + condition.slice(1, -1);\r\n                }\r\n            } \r\n            // insert env variable`\r\n            else if (condition[0] === \"{\" && condition.slice(-1)[0] === \"}\") {\r\n                return `process.env?.${condition.slice(1, -1)}`;\r\n            } \r\n            // string\r\n            else {\r\n                const isNumber = /^\\d+$/g.test(condition);\r\n                condition = isNumber ? condition : (`\"${condition}\"`);\r\n                return `${condition}`;\r\n            }\r\n        }\r\n    }\r\n    function getStatementType (statement) {\r\n        statement = statement.replace(/\\s+/g, \" \").toLocaleLowerCase();\r\n        if (statement.startsWith(\"if\")) return \"IF\";\r\n        else if (statement.startsWith(\"else if\")) return \"ELSEIF\";\r\n        else if (statement.startsWith(\"else\")) return \"ELSE\";\r\n        else if (statement.startsWith(\"endif\")) return \"ENDIF\";\r\n    }\r\n    function getLines () {\r\n        let i = 0;\r\n        let res = [];\r\n        let temp = [];\r\n        while (i < input.length) {\r\n            if (input[i] === \"\\n\") {\r\n                res.push(temp);\r\n                temp = [];\r\n                i++;\r\n            } else if (input[i] === \"\\r\" && input[i + 1] === \"\\n\") {\r\n                res.push(temp);\r\n                temp = [];\r\n                i += 2;\r\n            } else {\r\n                temp.push(i);\r\n                i++;\r\n            }\r\n        }\r\n        res.push(temp);\r\n        return res;\r\n    }\r\n}; \r\n\r\n/**\r\n * content转换为行\r\n *  \r\n * @param {String} input\r\n * @return {Array<String>}\r\n * @private\r\n */\r\nfunction content2lines (input = \"\") {\r\n    let lines = [];\r\n    let str = \"\";\r\n    for (let i = 0; i < input.length;) {\r\n        const char = input[i];\r\n        if (char === \"\\n\") {\r\n            i++;\r\n            lines.push(str);\r\n            str = \"\";\r\n        } else if (char === \"\\r\" && input[i + 1] === \"\\n\") {\r\n            lines.push(str);\r\n            str = \"\";\r\n            i += 2;\r\n        } else {\r\n            i++;\r\n            str += char;\r\n        }\r\n    }\r\n    if (str) lines.push(str);\r\n    return lines;\r\n}\r\n\r\n/**\r\n * 检测if等语法的配套合法性\r\n * \r\n * @param {Array} infos\r\n * @return {void}\r\n * @private\r\n */\r\nfunction checkIFStatement (infos = []) {\r\n    if (!infos.length) return;\r\n    let current = infos[0];\r\n    if (current.type !== \"IF\") {\r\n        log(buildErrorTips(current.line, current.position, \"应该为if表达式！\"), true);\r\n    }\r\n    for (let i = 1; i < infos.length; i++) {\r\n        const info = infos[i];\r\n        if (current.type === IFStatementInfo.Types.IF) {\r\n            if (\r\n                ![\r\n                    IFStatementInfo.Types.ENDIF, \r\n                    IFStatementInfo.Types.ELSE, \r\n                    IFStatementInfo.Types.ELSEIF\r\n                ].includes(info.type)\r\n            ) {\r\n                log(buildErrorTips(info.line, info.position, \"不应该为if表达式！\"), true);\r\n            }\r\n            current = info;\r\n            continue;\r\n        }\r\n        if (current.type === IFStatementInfo.Types.ENDIF) {\r\n            if (info.type !== IFStatementInfo.Types.IF) {\r\n                log(buildErrorTips(info.line, info.position, \"应该为if表达式！\"), true);\r\n            }\r\n            current = info;\r\n            continue;\r\n        }\r\n        if (current.type === IFStatementInfo.Types.ELSEIF) {\r\n            if (![\"ENDIF\", \"ELSEIF\", \"ELSE\"].includes(info.type)) {\r\n                log(buildErrorTips(info.line, info.position, \"不应该为if表达式！\"), true);\r\n            }\r\n            current = info;\r\n            continue;\r\n        }\r\n        if (current.type === IFStatementInfo.Types.ELSE) {\r\n            if (info.type !== IFStatementInfo.Types.ENDIF) {\r\n                log(buildErrorTips(info.line, info.position, \"应该为endif表达式！\"), true);\r\n            }\r\n            current = info;\r\n            continue;\r\n        }\r\n    }\r\n    if (current.type !== IFStatementInfo.Types.ENDIF) {\r\n        log(buildErrorTips(current.line, current.position, \"没有对应的结束的endif表达式！\"), true);\r\n    }\r\n}\r\n\r\nfunction buildErrorTips (line, position, msg) {\r\n    let tips = `${node.path} 第${line}行${msg}\\n`;\r\n    tips += `>>> ${readPositionCodeFragment(node.content, position)}\\n`;\r\n    return tips;\r\n}\r\n\r\nfunction readPositionCodeFragment (code = \"\", position = 0) {\r\n    let s = \"\";\r\n    while (position < code.length) {\r\n        const char = code[position];\r\n        if (char === \"\\r\") break;\r\n        else s += char;\r\n        position++;\r\n    }\r\n    return s;\r\n}\r\n\r\n/**\r\n * 获取env content的片段\r\n * 主要为了方便处理ifstatment表达式\r\n * 返回数组类型，元素为字符串或函数，函数需要执行才能返回字符串\r\n * \r\n * @param {Array<IFStatementInfo>} infos\r\n * @param {Array<String>} lines\r\n * @return {Array<Function|String>}\r\n * @private\r\n */\r\nfunction getFragments (infos, lines) {\r\n    if (!infos.length) return [lines.join(\"\\r\\n\")];\r\n    // 需要注意，info的line是从1开始的，对应0，因为为了方便人读取，所以从1开始\r\n    let res = [];\r\n    let code = \"\";\r\n    // ifelse statement前面的表达式\r\n    if (infos[0].line !== 1) {\r\n        res.push(\r\n            lines.slice(0, infos[0].line - 1).join(\"\\r\\n\") // info的line是从1开始的，为了方便人读取\r\n        );\r\n    }\r\n    // ifelse表达式, 此处不用处理ifelse statement的合法检查\r\n    for (let i = 0; i < infos.length; i++) {\r\n        const info = infos[i];\r\n        if (info.type === \"IF\") {\r\n            const block = lines.slice(info.line, infos[i + 1].line - 1).join(\"\\r\\n\");\r\n            code += `\r\n                const fcondition${i} = ${info.exec.toString()};\r\n                if (fcondition${i}.call(this)) {\r\n                    return \\`${block}\\`;\r\n                }\r\n            `;\r\n        } else if (info.type === \"ELSEIF\") {\r\n            code = `const fcondition${i} = ${info.exec.toString()};\\r\\n` + code;\r\n            code += `\r\n                else if (fcondition${i}.call(this)) {\r\n                    return \\`${lines.slice(info.line, infos[i + 1].line - 1).join(\"\\r\\n\")}\\`;\r\n                }\r\n            `;\r\n        } else if (info.type === \"ELSE\") {\r\n            code += `\r\n                else {\r\n                    return \\`${lines.slice(info.line, infos[i + 1].line - 1).join(\"\\r\\n\")}\\`;\r\n                }\r\n            `;\r\n        } else if (info.type === \"ENDIF\") {\r\n            res.push(new Function(code));\r\n            code = \"\";\r\n            // 处理剩下的非ifelse staement语句或下次if statement之间的语句\r\n            if (infos[i + 1]) {\r\n                res.push(lines.slice(info.line, infos[i + 1].line - 1).join(\"\\r\\n\"));\r\n            } else {\r\n                res.push(lines.slice(info.line).join(\"\\r\\n\"));\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\n/**\r\n * 入口\r\n * \r\n * @param {EnvNode} envNode\r\n * @param {(void|Array<IFStatementInfo>)}\r\n * @public\r\n */\r\nexport default function (envNode) {\r\n    if (!(envNode instanceof EnvNode)) throw TypeError(\"envNode 应为 EnvNode类型！\");\r\n    node = envNode;\r\n    const infos = getIFStatementInfo(node.content);\r\n    checkIFStatement(infos);\r\n    const lines = content2lines(node.content);\r\n    const fragments = getFragments(infos, lines);\r\n    node = undefined;\r\n    return fragments;\r\n}","import { getEnvAsync, getEnv } from \"./getEnv.js\";\r\nimport getFragments from \"./parseIFStatements.js\";\r\nimport { STATEMENT } from \"./regs.js\";\r\nimport { parseKV2Context, hasRemotePath, isRemotePath } from \"./helper.js\";\r\nimport { kConfigIsStrict } from \"./constans.js\";\r\n\r\nfunction main (context = {}, envNode = {}) {\r\n    const fragments = getFragments(envNode);\r\n    for (let fragment of fragments) {\r\n        let fragmentContent = \"\";\r\n        if (typeof fragment === \"function\") {\r\n            fragmentContent = fragment.call(context) || \"\";\r\n        } else {\r\n            fragmentContent = fragment;\r\n        }\r\n        let rows = fragmentContent.match(STATEMENT) || [];\r\n        for (let row of rows) {\r\n            // include statement\r\n            if (row.toLocaleLowerCase().startsWith(\"include\")) {\r\n                row = row.replace(/ +/g, \" \");\r\n                const [, path] = row.split(\" \");\r\n                const node = envNode.includes.find(node => {\r\n                    return node.name === path;\r\n                });\r\n                if (node) main(context, node);\r\n            }\r\n            // KV statement\r\n            else {\r\n                parseKV2Context(context, row);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 入口\r\n *\r\n * @param {String} envPath 本地env文件路径或者远程env文件链接\r\n * @param {Object} [options] 配置对象，可选\r\n * @param {Boolean} [options.isStrict] 是否是严格模式，严格模式下env文件找不到会抛错\r\n * @return {(Object|Promise<Object>)}\r\n */\r\nexport default (envPath, options) => {\r\n    if (options && {}.toString.call(options) === \"[object Object]\") {\r\n        const { isStrict } = options;\r\n        global[kConfigIsStrict] = isStrict;\r\n    }\r\n    const context = {};\r\n    if (isRemotePath(envPath)) {\r\n        return getEnvAsync(envPath)\r\n            .then(node => {\r\n                main(context, node);\r\n                return context;\r\n            });\r\n    }\r\n    if (hasRemotePath(envPath)) {\r\n        return getEnvAsync(envPath)\r\n            .then(node => {\r\n                main(context, node);\r\n                return context;\r\n            });\r\n    } else {\r\n        const node = getEnv(envPath);\r\n        main(context, node);\r\n        return context;\r\n    }\r\n};"],"names":["path","fs","https","http","url","getFragments"],"mappings":"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"}