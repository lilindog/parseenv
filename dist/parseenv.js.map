{"version":3,"file":"parseenv.js","sources":["../src/regs.js","../src/constans.js","../src/lib.js","../src/main.js"],"sourcesContent":["export const ROW_REG = /(?<=(?:\\n|^))[\\x20]*?(?:\\w+|\\w+\\[\\]|\\w+\\{\\s*\\w+\\s*\\})\\s*=\\s*.+/i;\r\nexport const INCLUDE_REG = /(?<=^|\\n)[^#\\n]*include\\s+[^\\n]+/ig;\r\nexport const ARRKEY_REG = /^\\s*(\\w+)\\[\\]\\s*$/i;\r\nexport const OBJKEY_REG = /^\\s*(\\w+)\\{\\s*(\\w+)\\s*\\}\\s*/i;\r\nexport const ENV_INJECTION = /(?<!\\\\)\\{([^\\}]+)\\}(?!\\\\)/ig;","export const kConfigIsStrict = Symbol(\"k_config_is_strict\");","import { ROW_REG, INCLUDE_REG, ENV_INJECTION, OBJKEY_REG, ARRKEY_REG } from \"./regs.js\";\r\nimport { kConfigIsStrict } from \"./constans.js\";\r\nimport url from \"url\";\r\nimport path from \"path\";\r\nimport http from \"http\";\r\nimport https from \"https\";\r\nimport fs from \"fs\";\r\n\r\nexport const log = msg => {\r\n    const prefix = \"[Parseenv]\";\r\n    /* eslint-disable no-console */\r\n    if (global[kConfigIsStrict]) {\r\n        console.log(\"\\x1b[41m\", \"\\x1b[37m\", prefix, \"\\x1b[40m\", \"\\x1b[31m\", msg, \"\\x1b[0m\");\r\n        process.exit(1);\r\n    } else {\r\n        console.log(\"\\x1b[45m\", \"\\x1b[37m\", prefix, \"\\x1b[40m\", \"\\x1b[33m\", msg, \"\\x1b[0m\");\r\n    }\r\n    /* eslint-disable no-console */\r\n};\r\n\r\nexport const isRemotePath = path => path.startsWith(\"http\");\r\n\r\n/**\r\n * 检测本地env文件中是否包含远程include路径（包含嵌套env中的include）\r\n *\r\n * @param {String} envPath 主env文件路径\r\n * @return {Boolean}\r\n * @public\r\n */\r\nexport const hasRemotePath = envPath => {\r\n    if (!path.isAbsolute(envPath)) {\r\n        envPath = path.resolve(envPath);\r\n    }\r\n    if (!fs.existsSync(envPath)) {\r\n        return false;\r\n    }\r\n    const includePaths = getIncludePathsFromString(fs.readFileSync(envPath).toString(\"utf8\"));\r\n    if (includePaths.some(isRemotePath)) return true;\r\n    for (let includePath of includePaths) {\r\n        const envPathDir = path.dirname(envPath);\r\n        if (hasRemotePath(path.resolve(envPathDir, includePath))) return true;\r\n    }\r\n    return false;\r\n};\r\n\r\n/**\r\n * 解析键值对\r\n *\r\n * @param  {Stirng} str env文件的文本字符串\r\n * @return {Object}\r\n */\r\nexport const parseKV = str => {\r\n    return str.replace(/\\n{2,}/g, \"\\n\").split(\"\\n\").filter(row => ROW_REG.test(row)).reduce((data, item) => {\r\n        let [ key, value ] = item.replace(/\\s=\\s/, \"=\").split(\"=\");\r\n        if (OBJKEY_REG.test(key)) {\r\n            let field;\r\n            [ key, field ] = OBJKEY_REG.exec(key).slice(1);\r\n            if (!data[key]) data[key] = {};\r\n            data[key][field] = handleValue(value);\r\n        } else if (ARRKEY_REG.test(key)) {\r\n            key = ARRKEY_REG.exec(key)[1];\r\n            if (!data[key]) data[key] = [];\r\n            data[key].push(handleValue(value));\r\n        } else {\r\n            data[key.trim()] = handleValue(value);\r\n        }\r\n        return data;\r\n    }, {});\r\n};\r\n\r\n/**\r\n * 解析字符串里的所有include的路径集合\r\n *\r\n * @param {String} str env文件内容\r\n * @return {Array<String>}\r\n */\r\nexport const getIncludePathsFromString = str => {\r\n    return (str.match(INCLUDE_REG) || [])\r\n        .map(statement => statement.replace(/\\s+/g, \" \").split(\" \")[1])\r\n        .map(handleEnvironmentVariable);\r\n};\r\n\r\n/**\r\n * 处理表达式右侧语句的环境变量插值和其转义\r\n *\r\n * @param {String} value\r\n * @return {String}\r\n * @public\r\n */\r\nexport const handleEnvironmentVariable = value => {\r\n    const envInjectTags = value.match(ENV_INJECTION);\r\n    if (!envInjectTags) return value;\r\n    let field, property;\r\n    [...new Set(envInjectTags)].forEach(tag => {\r\n        field = tag.replace(/[\\{\\}]/g, \"\");\r\n        property = process.env[field];\r\n        if (property === undefined) log(`环境变量 \"${field}\" 不存在！`);\r\n        value = value.replace(new RegExp(tag, \"g\"), property || tag);\r\n    });\r\n    return value;\r\n};\r\n\r\n/**\r\n * 处理变量值的类型问题\r\n *\r\n * @param {String} value\r\n * @returns {(Number|String)}\r\n */\r\nconst handleValue = value => {\r\n    value = value.trim();\r\n    value = handleEnvironmentVariable(value);\r\n    return /^\\d+$/.test(value) ? Number(value) : value;\r\n};\r\n\r\n/**\r\n * 解析本地env\r\n *\r\n * @param {String} envPath env入口文件\r\n * @return {Array<string>}\r\n * @public\r\n */\r\nexport const parseEnv = envPath => {\r\n    let result = [];\r\n    if (!path.isAbsolute(envPath)) {\r\n        envPath = path.resolve(envPath);\r\n    }\r\n    if (!fs.existsSync(envPath)) {\r\n        log(`\"${envPath}\" env文件不存在！`);\r\n        return [];\r\n    }\r\n    const content = fs.readFileSync(envPath).toString(\"utf8\");\r\n    const includePaths = getIncludePathsFromString(content);\r\n    includePaths.forEach(includePath => {\r\n        const envPathDir = path.dirname(envPath);\r\n        includePath = path.resolve(envPathDir, includePath);\r\n        result = [...result, ...parseEnv(includePath)];\r\n    });\r\n    result.push(content);\r\n    return result;\r\n};\r\n\r\n/**\r\n * 请求远程url的env文件\r\n *\r\n * @param {String} remoteUrl http或者https链接\r\n * @param {Function} resolveCb 递归回调，重定向时内部使用，外部不要传递\r\n * @param {Number} timeout 超时\r\n * @param {Number} redirects 重定向次数限制\r\n * @return {Promise<string>}\r\n * @private\r\n */\r\nconst getRemoteEnv = (\r\n    remoteUrl,\r\n    resolveCb,\r\n    timeout = 1000,\r\n    redirects = 1\r\n) => {\r\n    let get;\r\n    if (remoteUrl.startsWith(\"https:\")) {\r\n        ({ get } = https);\r\n    } else if (remoteUrl.startsWith(\"http:\")) {\r\n        ({ get } = http);\r\n    }\r\n    let isResolveCb = resolveCb && typeof resolveCb === \"function\";\r\n    let done;\r\n    let p;\r\n    if (!isResolveCb) {\r\n        p = new Promise(r => done = r);\r\n    } else {\r\n        done = resolveCb;\r\n    }\r\n    let timeoutId = setTimeout(() => {\r\n        log(`\"${remoteUrl}\" 文件加载超时！`);\r\n        r.destroy();\r\n        done(\"\");\r\n        clearTimeout(timeoutId);\r\n    }, timeout);\r\n    const r = get(remoteUrl, res => {\r\n        if (res.statusCode < 400 && res.statusCode > 300) {\r\n            clearTimeout(timeoutId);\r\n            if (redirects === 0) {\r\n                log(`\"${remoteUrl}\" 文件重回定向次数溢出！`);\r\n                done(\"\");\r\n                return;\r\n            }\r\n            const u = new url.URL(remoteUrl);\r\n            u.hostname = u.hash = u.search = \"\";\r\n            const redirectUrl = new url.URL(res.headers.location, u.href).href;\r\n            parseEnvAsync(redirectUrl, done, timeout, --redirects);\r\n            return;\r\n        }\r\n        if (res.statusCode >= 400) {\r\n            clearTimeout(timeoutId);\r\n            log(`\"${remoteUrl}\" env文件加载失败！code ${res.statusCode}`);\r\n            done(\"\");\r\n            return;\r\n        }\r\n        if (!res.headers[\"content-type\"].startsWith(\"text/\")) {\r\n            log(`\"${remoteUrl}\" 文件content-type错误，应为text/xxx!`);\r\n            clearTimeout(timeoutId);\r\n            done(\"\");\r\n            return;\r\n        }\r\n        let buf = [];\r\n        res.on(\"data\", chunk => buf.push(...chunk));\r\n        res.on(\"end\", () => {\r\n            clearTimeout(timeoutId);\r\n            done(Buffer.from(buf).toString(\"utf8\"));\r\n        });\r\n    });\r\n    r.on(\"error\", done.bind(null, \"\"));\r\n    if (!isResolveCb) {\r\n        return p;\r\n    }\r\n};\r\n\r\n/**\r\n * 解析含有远程url include的env文件\r\n *\r\n * @param {String} envPath 可以是远程url，也可以是本地文件路径path\r\n * @return {Promise<String>}\r\n * @public\r\n */\r\nexport const parseEnvAsync = async envPath => {\r\n    // 暂未考虑include同文件去重，或全局去重（不同包含层级）等问题。\r\n    // 默认还是以后来者居上原则\r\n    let results = [];\r\n    const isRemoteLink = isRemotePath(envPath);\r\n    if (isRemoteLink) {\r\n        const content = await getRemoteEnv(envPath);\r\n        const includePaths = getIncludePathsFromString(content);\r\n        for (let includePath of includePaths) {\r\n            includePath = handleEnvironmentVariable(includePath);\r\n            includePath = new url.URL(includePath, envPath).href;\r\n            results = [ ...results, ...(await parseEnvAsync(includePath)) ];\r\n        }\r\n        results.push(content);\r\n    } else {\r\n        if (path.isAbsolute(envPath)) {\r\n            envPath = path.resolve(envPath);\r\n        }\r\n        if (!fs.existsSync(envPath)) {\r\n            log(`\"${envPath}\" env文件不存在！`);\r\n            return [];\r\n        }\r\n        const content = fs.readFileSync(envPath).toString(\"utf8\");\r\n        const includePaths = getIncludePathsFromString(content);\r\n        for (let includePath of includePaths) {\r\n            includePath = handleEnvironmentVariable(includePath);\r\n            if (isRemotePath(includePath)) {\r\n                results = [ ...results, ...(await parseEnvAsync(includePath)) ];\r\n            } else {\r\n                includePath = path.resolve(path.dirname(envPath), includePath);\r\n                results = [ ...results, ...(await parseEnvAsync(includePath)) ];\r\n            }\r\n        }\r\n        results.push(content);\r\n    }\r\n    return results;\r\n};","import {\r\n    hasRemotePath,\r\n    isRemotePath,\r\n    parseEnv,\r\n    parseEnvAsync,\r\n    parseKV\r\n} from \"./lib.js\";\r\nimport { kConfigIsStrict } from \"./constans.js\";\r\n\r\nconst parseAsync = async envPath => {\r\n    const result = await parseEnvAsync(envPath);\r\n    return parseKV(result.join(\"\\n\"));\r\n};\r\n\r\n/**\r\n * 入口\r\n *\r\n * @param {String} envPath 本地env文件路径或者远程env文件链接\r\n * @param {Object} [options] 配置对象，可选\r\n * @param {Boolean} [options.isStrict] 是否是严格模式，严格模式下env文件找不到会抛错\r\n * @return {(Object|Promise<Object>)}\r\n */\r\nexport default (envPath, options) => {\r\n    if (options && {}.toString.call(options) === \"[object Object]\") {\r\n        const { isStrict } = options;\r\n        global[kConfigIsStrict] = isStrict;\r\n    }\r\n    if (isRemotePath(envPath)) {\r\n        return parseAsync(envPath);\r\n    }\r\n    if (hasRemotePath(envPath)) {\r\n        return parseAsync(envPath);\r\n    } else {\r\n        const result = parseEnv(envPath);\r\n        return parseKV(result.join(\"\\n\"));\r\n    }\r\n};"],"names":["path","fs","https","http","url"],"mappings":"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"}